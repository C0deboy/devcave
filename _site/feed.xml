<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.6.2">Jekyll</generator><link href="https://devcave.pl/feed.xml" rel="self" type="application/atom+xml" /><link href="https://devcave.pl/" rel="alternate" type="text/html" /><updated>2017-11-30T15:48:35+01:00</updated><id>https://devcave.pl/</id><title type="html">devcave.pl</title><subtitle>Devcave - jaskinia programisty. Blog programisty na tematy związane z branżą IT, a szczególnie z programowaniem. Pracuję głownie z językami Java i Javascript, ale na blogu nie zabraknie tematów ogólnych, dla każdego programisty.</subtitle><entry><title type="html">Zasady projektowania obiektowego</title><link href="https://devcave.pl/notatnik-juniora/zasady-projektowania-kodu" rel="alternate" type="text/html" title="Zasady projektowania obiektowego" /><published>2017-11-30T13:00:00+01:00</published><updated>2017-11-30T13:00:00+01:00</updated><id>https://devcave.pl/notatnik-juniora/zasady-projektowania-kodu</id><content type="html" xml:base="https://devcave.pl/notatnik-juniora/zasady-projektowania-kodu">&lt;p&gt;Przez proces swojej nauki zebrałem całkiem pokaźną listę zasad projektowania obiektowego, tym samym dobrych praktyk, do których warto się stosować. Zostawiam to tutaj jako swój notatnik. Nie można tego traktować jako pełne źródło wiedzy. Samo przeczytanie wymienionych zasad mało da, dlatego zachęcam do zgłębienia każdej z nich na własną rękę - najlepiej z przykładami ;)&lt;/p&gt;

&lt;h1 id=&quot;ogólne&quot;&gt;Ogólne&lt;/h1&gt;

&lt;h2 id=&quot;dry---dont-repeat-yourself&quot;&gt;DRY - Don’t Repeat Yourself&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Jedna z podstawowych zasad programowania - &lt;strong&gt;nie powtarzaj się&lt;/strong&gt;. Wielokrotne użycie tego samego kodu to podstawa programowania. Nie ma miejsca na kopiuj/wklej.&lt;/li&gt;
  &lt;li&gt;Jeśli jesteś blisko powtórzenia (np. chcesz zastosować kopiuj/wklej, seria ifów lub w kodzie występują podobne zachowania) pomyśl nad stworzeniem abstrakcji (pętla, wspólny interfejs, funkcja, klasa, jakiś wzorzec projektowy np. Strategia itp.), którą będziesz mógł wielokrotnie wykorzystać.&lt;/li&gt;
  &lt;li&gt;Nie dotyczy testów i dokumentacji*&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lepsza czytelność kodu oraz łatwość w utrzymaniu.&lt;/li&gt;
  &lt;li&gt;Zmiana implementacji tylko w jednym miejscu.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;kiss---keep-it-simple-stupid&quot;&gt;KISS - Keep it simple, stupid!&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Prostota (i unikanie złożoności) powinna być priorytetem podczas programowania. Kod powinien byc łatwy do odczytania i zrozumienia wymagając do tego jak najmniej wysiłku.&lt;/li&gt;
  &lt;li&gt;Większość systemów działa najlepiej, gdy polegają na prostocie, a nie na złożoności.&lt;/li&gt;
  &lt;li&gt;Staraj się, aby twój kod podczas analizy nie zmuszał do zbytniego myślenia.&lt;/li&gt;
  &lt;li&gt;Gdy po jakimś czasie wracasz do &lt;strong&gt;swojego&lt;/strong&gt; kodu i nie wiesz co tam się dzieje, to znak, że musisz nad tym popracować ;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Można to rozszerzyć o zasadę:&lt;/p&gt;

&lt;h3 id=&quot;code-for-the-maintainer&quot;&gt;Code for the Maintainer&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Czyli, programuj tak jakbyś to robił dla osoby, która będzie później utrzymywać ten kod. “Rób to tak jakby to był brutalny psychopata, który wie gdzie mieszkasz”.&lt;/li&gt;
  &lt;li&gt;Dlaczego? Utrzymywanie kodu to (przeważnie) najbardziej wymagająca i większa część pracy programistów. Nie powinniśmy utrudniać sobie tego zadania.&lt;/li&gt;
  &lt;li&gt;Zadbaj o to, aby nie trzeba było się zbytnio głowić nad kawałkiem Twojego kodu.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;boy-scout-rule&quot;&gt;Boy scout rule&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Zawsze pozostaw po sobie kod czystszy niż go zastałeś.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Szybciej i łatwiej zrozumieć kod.&lt;/li&gt;
  &lt;li&gt;Mniejsza ilość potencjalnych bugów.&lt;/li&gt;
  &lt;li&gt;łatwość w utrzymaniu i modyfikowaniu kodu.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;solid&quot;&gt;SOLID&lt;/h2&gt;

&lt;h3 id=&quot;s---single-responsibility-principle&quot;&gt;S - Single responsibility principle&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Klasa powinna być odpowiedzialna za pojedynczy obszar. Nie powinno być więcej powodów niż jeden, aby klasa się zmieniła.&lt;/li&gt;
  &lt;li&gt;Odpowiedzialność może być zdefiniowana jako powód do zmiany, zatem klasa powinna mieć tylko jeden taki powód, a więc jedną odpowiedzialność.&lt;/li&gt;
  &lt;li&gt;Klasa realizuję pojedyncze zadanie.&lt;/li&gt;
  &lt;li&gt;Gdy wymagana jest zmiana, powinna ona objąć tylko jedną klasę lub pakiet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Lepsza czytelność kodu.&lt;/li&gt;
  &lt;li&gt;Łatwość w utrzymaniu i modyfikowaniu kodu.&lt;/li&gt;
  &lt;li&gt;Nie musimy skakać po kilku pakietach/klasach, aby wprowadzić pojedyńczą zmianę.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;o---openclosed-principle&quot;&gt;O - Open/closed principle&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Powinieneś być w stanie rozszerzać swoje klasy bez jej modyfikacji.&lt;/li&gt;
  &lt;li&gt;Klasy powinny być otwarte na rozszerzanie, a zamknięte na modyfikację.&lt;/li&gt;
  &lt;li&gt;Polegaj na abstrakcji i polimorfizmie&lt;/li&gt;
  &lt;li&gt;Łatwo złamać tą zasadę, gdy mamy przypadki kontrolowane przez ify czy konstrukcję switch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Łatwiejsze i bardziej stabline rozbudowywanie systemu.&lt;/li&gt;
  &lt;li&gt;Minimalizujemy potrzebę modyfikowania instniejącego kodu w wielu miejscach, gdy dodajemy np. kolejny przypadek czegoś.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;l---liskov-substitution-principle&quot;&gt;L - Liskov substitution principle&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Klasy w programie powinny być podmienialne przez swoje podklasy bez naruszania poprawności programu, czyli klasa dziedzicząca musi być dobrym odpowiednikiem klasy bazowej.&lt;/li&gt;
  &lt;li&gt;Podklasa nie powinna robić mniej niż klasa bazowa. Czyli zawsze powinna robić więcej.&lt;/li&gt;
  &lt;li&gt;Zobacz popularny przykład złego zastosowania dziedziczenia “Square extends Rectangle”&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Przewidywalne zachowania obiektów&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;i---interface-segregation-principle&quot;&gt;I - Interface segregation principle&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Wiele mniejszych, konkretnych interfejsów jest lepsze od pojedynczego ogólnego interfejsu.&lt;/li&gt;
  &lt;li&gt;Powinno się projektować małe i zwarte interfejsy.&lt;/li&gt;
  &lt;li&gt;Klasa nie powinna implementować interfejsu, przez który naruszy &lt;a href=&quot;#S---Single-responsibility-principle&quot;&gt;Single responsibility principle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Lepsza reużywalność interfejsów, czasem nie wszystkie metody są potrzebne z “dużego” interfejsu.&lt;/li&gt;
  &lt;li&gt;Nie naruszanie &lt;a href=&quot;#S---Single-responsibility-principle&quot;&gt;Single responsibility principle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;d---dependency-inversion-principle&quot;&gt;D - Dependency inversion principle&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Niskopoziomowe klasy powinny zależeć od klas wysoko poziomowych, a obie od swoich abstrakcji.&lt;/li&gt;
  &lt;li&gt;Abstrakcję nie powinny polegać na szczegółach implementacyjnych.&lt;/li&gt;
  &lt;li&gt;Szczegóły implementacyjne powinny polegać na abstrakcji.&lt;/li&gt;
  &lt;li&gt;czyli w żadnej definicji funkcji i w żadnej deklaracji zmiennej nie powinniśmy używać nazwy klasy, tylko jej abstrakcji (np. interfejs, klasa abstrakcyjna).&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;minimalizowanie zależności (loose coupling)&lt;/li&gt;
  &lt;li&gt;elastyczność - łatwiej wprowadzać zmiany&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lod---law-of-demeter&quot;&gt;LoD - Law of Demeter&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Nie rozmawiaj z obcymi. Rozmawiaj tylko z przyjaciółmi.&lt;/li&gt;
  &lt;li&gt;Co to znaczy? Metoda obiektu powinna wywoływać metody tylko od:
    &lt;ul&gt;
      &lt;li&gt;Swojego obiektu.&lt;/li&gt;
      &lt;li&gt;Argumentu przekazanego do metody.&lt;/li&gt;
      &lt;li&gt;Obiektu stworzonego wewnątrz tej metody.&lt;/li&gt;
      &lt;li&gt;Bezpośredniego pola obiektu.&lt;/li&gt;
      &lt;li&gt;Np. nie powinno się stosować wywołań typu A.getB().getC().getD.getName().&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Zmniejsza to powiązania między modułami oraz ilość ujawnianych detali&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;slap---single-level-of-abstraction-principle&quot;&gt;SLAP - Single Level of Abstraction Principle&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Zasada ta mówi, że każda linia kodu w metodzie powinna mieć ten sam poziom abstrakcji, czyli aby unikać mieszania ze sobą wysoko- i niskopoziomowych detali.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Czytelność i łatwiejsze utrzymanie kodu&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;composition-over-inheritance&quot;&gt;Composition Over Inheritance&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Kompozycja ponad dziedziczenie, czyli preferuj relacje B “zawiera/używa A” zamiast “jest A”.&lt;/li&gt;
  &lt;li&gt;W większości wypadów możemy całkowicie zrezygnować z dziedziczenia w naszej aplikacji (Oczywiście chodzi o dziedziczenie z &lt;strong&gt;klas&lt;/strong&gt;, nie z interfejsów). Jest to zalecany sposób projektowania aplikacji.&lt;/li&gt;
  &lt;li&gt;Stosuj dziedziczenie tylko gdy &lt;a href=&quot;#l---liskov-substitution-principle&quot;&gt;LSP&lt;/a&gt; nie jest złamana i naprawdę tego potrzebujesz.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Zmniejsza to zależności między klasami&lt;/li&gt;
  &lt;li&gt;Używając dziedziczenia łatwiej też o złamanie &lt;a href=&quot;#l---liskov-substitution-principle&quot;&gt;Liskov substitution principle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;encapsulate-what-changes&quot;&gt;Encapsulate What Changes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Miejsca, które są najbardziej prawdopodobne do zmiany powinny być schowane (zhermetyzowane) pod API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Minimalizuje wymagane modyfikacje, gdy musimy wprowadzić zmianę&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;projektowanie-pakietów&quot;&gt;Projektowanie pakietów&lt;/h1&gt;

&lt;h2 id=&quot;cpp---common-closure-principle&quot;&gt;CPP - Common Closure Principle&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Klasy zmieniające się razem powinny być pakietowane razem&lt;/li&gt;
  &lt;li&gt;Izolacja zmian do zakresu pakietu&lt;/li&gt;
  &lt;li&gt;Ściśle powiązana z &lt;a href=&quot;#o---open/closed-principle&quot;&gt;OCP&lt;/a&gt; na poziomie klas&lt;/li&gt;
  &lt;li&gt;Oznacza to tyle, że klasy, które zmieniają się wspólnie po zmianie wymagań, powinny być umieszczane w tym samym pakiecie.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Minimalizuje to liczbę pakietów do zmiany w przypadku zmiany wymagań.&lt;/li&gt;
  &lt;li&gt;Nie trzeba przeszukiwać kilku różnych pakietów w celu wprowadzenia zmiany&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rep---reuse-release-equivalence-principle&quot;&gt;REP - Reuse-release equivalence principle&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Ponownie użycie kodu to nie kopiowanie klasy z jednego projektu do drugiego. Jeżeli chcemy użyć ponownie kod to należy go wydzielić do biblioteki czy modułu, który później możemy użyć ponownie.&lt;/li&gt;
  &lt;li&gt;Klasy, które są przeznaczone do ponownego wykorzystania, powinien być w jednej paczce, która może stać się reużywalną biblioteką. Nie powinny się tam znaleźć te, które nie są przeznaczone do ponownego wykorzystania. W skrócie - albo wszystkie są reużywalne, albo żadne.&lt;/li&gt;
  &lt;li&gt;Powinny to być również klasy, które są z jednej “rodziny”. Klasy niezwiązane z przeznaczeniem pakietu nie powinny się tam znaleźć.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gdy autor oryginalnego kodu wprowadzi zmianę – w szczególności poprawi jakiś błąd – wówczas każdy może w łatwy sposób skorzystać ze zmian pobierając nową wersję biblioteki, zamiast zmieniać coś samodzielnie - a w przypadku, gdy my jesteśmy autorami, dokonywać zmian w co najmniej dwóch miejscach za każdym razem.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;crp---common-reuse-principle&quot;&gt;CRP - Common-reuse principle&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Klasy wspólnie używane powinny być wspólnie pakietowane&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Lepsza spójność i czytelność systemu&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;zależności-miedzy-pakietami--klasami&quot;&gt;Zależności miedzy pakietami / klasami&lt;/h1&gt;

&lt;h2 id=&quot;minimise-coupling&quot;&gt;Minimise Coupling&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Minimalizuj powiązania między pakietami/klasami. Mniejsza ilość zależności jest lepsza.&lt;/li&gt;
  &lt;li&gt;Można to zrobić przez ukrywanie szczegółów implementacji czy stosowanie &lt;a href=&quot;#LoD---Law-of-Demeter&quot;&gt;Law of Demeter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Zmniejsza to szansę na to, że zmiana kodu w zależności A nie popsuje kawałka kodu B.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;adp---acyclic-dependencies-principle&quot;&gt;ADP - Acyclic dependencies principle&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Zasada ta mówi, że w strukturze zależności nie powinno być zapętleń/cykli.&lt;/li&gt;
  &lt;li&gt;Przykładowa struktura łamiąca tą zasadę będzie gdy: pakiet A ma zależność w pakiecie B, który ma zależność w pakiecie C, który z kolei ma zależność w pakiecie A.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;text-diagram&quot;&gt;
A &amp;larr;-------- C
|           &amp;uarr;
'---&amp;rarr; B ----&lt;sup&gt;|&lt;/sup&gt;
&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;Możemy temu zapobiec stosując &lt;a href=&quot;#D---Dependency-inversion-principle&quot;&gt;Dependency inversion principle&lt;/a&gt;, wzorce projektowe np. Observer lub stworzyć nowy pakiet i wrzucić tam wszystkie wspólne zależności.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;łatwiej zrozumieć i utrzymać system&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sdp---stable-dependencies-principle&quot;&gt;SDP - Stable-dependencies principle&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Pakiet, który jest zmienny nie powinien zależeć od pakietu, który jest trudny do zmiany.&lt;/li&gt;
  &lt;li&gt;Zależności tego pakietu powinny być bardziej stabilne niż on sam.&lt;/li&gt;
  &lt;li&gt;Taką samą zasadę możemy stosować w przypadku klas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;advantages&quot;&gt;Plusy&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Zmniejsza efekt łancuchowej reakcji, która wymusza modyfikację kodu w kilku innych miejscach po wprowadzeniu jednej zmiany&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sap---stable-abstractions-principle&quot;&gt;SAP - Stable-abstractions principle&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Stabilny pakiet (trudny do zmiany) powinien być maksymalnie abstrakcyjny (czyli np. w większości operować na interfejsach), aby jego stabilność nie uniemożliwiała jego rozszerzania.&lt;/li&gt;
  &lt;li&gt;Niestabilny pakiet (łatwy do zmiany) powinien byc maksymalnie konkretny (czyli w większości operować na implementacjach) jako że jego niestabilność pozwala w łatwy sposób zmienić jego konkretną implementację.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Codeboy</name></author><category term="Notatnik-Juniora" /><category term="Notatnik-Juniora" /><category term="Dobre-praktyki" /><summary type="html">Przez proces swojej nauki zebrałem całkiem pokaźną listę zasad projektowania obiektowego, tym samym dobrych praktyk, do których warto się stosować. Zostawiam to tutaj jako swój notatnik. Nie można tego traktować jako pełne źródło wiedzy. Samo przeczytanie wymienionych zasad mało da, dlatego zachęcam do zgłębienia każdej z nich na własną rękę - najlepiej z przykładami ;) Ogólne DRY - Don’t Repeat Yourself Jedna z podstawowych zasad programowania - nie powtarzaj się. Wielokrotne użycie tego samego kodu to podstawa programowania. Nie ma miejsca na kopiuj/wklej. Jeśli jesteś blisko powtórzenia (np. chcesz zastosować kopiuj/wklej, seria ifów lub w kodzie występują podobne zachowania) pomyśl nad stworzeniem abstrakcji (pętla, wspólny interfejs, funkcja, klasa, jakiś wzorzec projektowy np. Strategia itp.), którą będziesz mógł wielokrotnie wykorzystać. Nie dotyczy testów i dokumentacji* Plusy Lepsza czytelność kodu oraz łatwość w utrzymaniu. Zmiana implementacji tylko w jednym miejscu. KISS - Keep it simple, stupid! Prostota (i unikanie złożoności) powinna być priorytetem podczas programowania. Kod powinien byc łatwy do odczytania i zrozumienia wymagając do tego jak najmniej wysiłku. Większość systemów działa najlepiej, gdy polegają na prostocie, a nie na złożoności. Staraj się, aby twój kod podczas analizy nie zmuszał do zbytniego myślenia. Gdy po jakimś czasie wracasz do swojego kodu i nie wiesz co tam się dzieje, to znak, że musisz nad tym popracować ;) Można to rozszerzyć o zasadę: Code for the Maintainer Czyli, programuj tak jakbyś to robił dla osoby, która będzie później utrzymywać ten kod. “Rób to tak jakby to był brutalny psychopata, który wie gdzie mieszkasz”. Dlaczego? Utrzymywanie kodu to (przeważnie) najbardziej wymagająca i większa część pracy programistów. Nie powinniśmy utrudniać sobie tego zadania. Zadbaj o to, aby nie trzeba było się zbytnio głowić nad kawałkiem Twojego kodu. Boy scout rule Zawsze pozostaw po sobie kod czystszy niż go zastałeś. Plusy Szybciej i łatwiej zrozumieć kod. Mniejsza ilość potencjalnych bugów. łatwość w utrzymaniu i modyfikowaniu kodu. SOLID S - Single responsibility principle Klasa powinna być odpowiedzialna za pojedynczy obszar. Nie powinno być więcej powodów niż jeden, aby klasa się zmieniła. Odpowiedzialność może być zdefiniowana jako powód do zmiany, zatem klasa powinna mieć tylko jeden taki powód, a więc jedną odpowiedzialność. Klasa realizuję pojedyncze zadanie. Gdy wymagana jest zmiana, powinna ona objąć tylko jedną klasę lub pakiet. Plusy Lepsza czytelność kodu. Łatwość w utrzymaniu i modyfikowaniu kodu. Nie musimy skakać po kilku pakietach/klasach, aby wprowadzić pojedyńczą zmianę. O - Open/closed principle Powinieneś być w stanie rozszerzać swoje klasy bez jej modyfikacji. Klasy powinny być otwarte na rozszerzanie, a zamknięte na modyfikację. Polegaj na abstrakcji i polimorfizmie Łatwo złamać tą zasadę, gdy mamy przypadki kontrolowane przez ify czy konstrukcję switch. Plusy Łatwiejsze i bardziej stabline rozbudowywanie systemu. Minimalizujemy potrzebę modyfikowania instniejącego kodu w wielu miejscach, gdy dodajemy np. kolejny przypadek czegoś. L - Liskov substitution principle Klasy w programie powinny być podmienialne przez swoje podklasy bez naruszania poprawności programu, czyli klasa dziedzicząca musi być dobrym odpowiednikiem klasy bazowej. Podklasa nie powinna robić mniej niż klasa bazowa. Czyli zawsze powinna robić więcej. Zobacz popularny przykład złego zastosowania dziedziczenia “Square extends Rectangle” Plusy Przewidywalne zachowania obiektów I - Interface segregation principle Wiele mniejszych, konkretnych interfejsów jest lepsze od pojedynczego ogólnego interfejsu. Powinno się projektować małe i zwarte interfejsy. Klasa nie powinna implementować interfejsu, przez który naruszy Single responsibility principle Plusy Lepsza reużywalność interfejsów, czasem nie wszystkie metody są potrzebne z “dużego” interfejsu. Nie naruszanie Single responsibility principle D - Dependency inversion principle Niskopoziomowe klasy powinny zależeć od klas wysoko poziomowych, a obie od swoich abstrakcji. Abstrakcję nie powinny polegać na szczegółach implementacyjnych. Szczegóły implementacyjne powinny polegać na abstrakcji. czyli w żadnej definicji funkcji i w żadnej deklaracji zmiennej nie powinniśmy używać nazwy klasy, tylko jej abstrakcji (np. interfejs, klasa abstrakcyjna). Plusy minimalizowanie zależności (loose coupling) elastyczność - łatwiej wprowadzać zmiany LoD - Law of Demeter Nie rozmawiaj z obcymi. Rozmawiaj tylko z przyjaciółmi. Co to znaczy? Metoda obiektu powinna wywoływać metody tylko od: Swojego obiektu. Argumentu przekazanego do metody. Obiektu stworzonego wewnątrz tej metody. Bezpośredniego pola obiektu. Np. nie powinno się stosować wywołań typu A.getB().getC().getD.getName(). Plusy Zmniejsza to powiązania między modułami oraz ilość ujawnianych detali SLAP - Single Level of Abstraction Principle Zasada ta mówi, że każda linia kodu w metodzie powinna mieć ten sam poziom abstrakcji, czyli aby unikać mieszania ze sobą wysoko- i niskopoziomowych detali. Plusy Czytelność i łatwiejsze utrzymanie kodu Composition Over Inheritance Kompozycja ponad dziedziczenie, czyli preferuj relacje B “zawiera/używa A” zamiast “jest A”. W większości wypadów możemy całkowicie zrezygnować z dziedziczenia w naszej aplikacji (Oczywiście chodzi o dziedziczenie z klas, nie z interfejsów). Jest to zalecany sposób projektowania aplikacji. Stosuj dziedziczenie tylko gdy LSP nie jest złamana i naprawdę tego potrzebujesz. Plusy Zmniejsza to zależności między klasami Używając dziedziczenia łatwiej też o złamanie Liskov substitution principle Encapsulate What Changes Miejsca, które są najbardziej prawdopodobne do zmiany powinny być schowane (zhermetyzowane) pod API. Plusy Minimalizuje wymagane modyfikacje, gdy musimy wprowadzić zmianę Projektowanie pakietów CPP - Common Closure Principle Klasy zmieniające się razem powinny być pakietowane razem Izolacja zmian do zakresu pakietu Ściśle powiązana z OCP na poziomie klas Oznacza to tyle, że klasy, które zmieniają się wspólnie po zmianie wymagań, powinny być umieszczane w tym samym pakiecie. Plusy Minimalizuje to liczbę pakietów do zmiany w przypadku zmiany wymagań. Nie trzeba przeszukiwać kilku różnych pakietów w celu wprowadzenia zmiany REP - Reuse-release equivalence principle Ponownie użycie kodu to nie kopiowanie klasy z jednego projektu do drugiego. Jeżeli chcemy użyć ponownie kod to należy go wydzielić do biblioteki czy modułu, który później możemy użyć ponownie. Klasy, które są przeznaczone do ponownego wykorzystania, powinien być w jednej paczce, która może stać się reużywalną biblioteką. Nie powinny się tam znaleźć te, które nie są przeznaczone do ponownego wykorzystania. W skrócie - albo wszystkie są reużywalne, albo żadne. Powinny to być również klasy, które są z jednej “rodziny”. Klasy niezwiązane z przeznaczeniem pakietu nie powinny się tam znaleźć. Plusy Gdy autor oryginalnego kodu wprowadzi zmianę – w szczególności poprawi jakiś błąd – wówczas każdy może w łatwy sposób skorzystać ze zmian pobierając nową wersję biblioteki, zamiast zmieniać coś samodzielnie - a w przypadku, gdy my jesteśmy autorami, dokonywać zmian w co najmniej dwóch miejscach za każdym razem. CRP - Common-reuse principle Klasy wspólnie używane powinny być wspólnie pakietowane Plusy Lepsza spójność i czytelność systemu Zależności miedzy pakietami / klasami Minimise Coupling Minimalizuj powiązania między pakietami/klasami. Mniejsza ilość zależności jest lepsza. Można to zrobić przez ukrywanie szczegółów implementacji czy stosowanie Law of Demeter Plusy Zmniejsza to szansę na to, że zmiana kodu w zależności A nie popsuje kawałka kodu B. ADP - Acyclic dependencies principle Zasada ta mówi, że w strukturze zależności nie powinno być zapętleń/cykli. Przykładowa struktura łamiąca tą zasadę będzie gdy: pakiet A ma zależność w pakiecie B, który ma zależność w pakiecie C, który z kolei ma zależność w pakiecie A. A &amp;larr;-------- C | &amp;uarr; '---&amp;rarr; B ----| Możemy temu zapobiec stosując Dependency inversion principle, wzorce projektowe np. Observer lub stworzyć nowy pakiet i wrzucić tam wszystkie wspólne zależności. Plusy łatwiej zrozumieć i utrzymać system SDP - Stable-dependencies principle Pakiet, który jest zmienny nie powinien zależeć od pakietu, który jest trudny do zmiany. Zależności tego pakietu powinny być bardziej stabilne niż on sam. Taką samą zasadę możemy stosować w przypadku klas. Plusy Zmniejsza efekt łancuchowej reakcji, która wymusza modyfikację kodu w kilku innych miejscach po wprowadzeniu jednej zmiany SAP - Stable-abstractions principle Stabilny pakiet (trudny do zmiany) powinien być maksymalnie abstrakcyjny (czyli np. w większości operować na interfejsach), aby jego stabilność nie uniemożliwiała jego rozszerzania. Niestabilny pakiet (łatwy do zmiany) powinien byc maksymalnie konkretny (czyli w większości operować na implementacjach) jako że jego niestabilność pozwala w łatwy sposób zmienić jego konkretną implementację.</summary></entry><entry><title type="html">Jak uczyć się do matury z informatyki?</title><link href="https://devcave.pl/podpowiadam-jak/jak-uczyc-sie-do-matury-z-informatyki" rel="alternate" type="text/html" title="Jak uczyć się do matury z informatyki?" /><published>2017-11-25T13:00:00+01:00</published><updated>2017-11-25T13:00:00+01:00</updated><id>https://devcave.pl/podpowiadam-jak/jak-uczyc-sie-do-matury-z-informatyki</id><content type="html" xml:base="https://devcave.pl/podpowiadam-jak/jak-uczyc-sie-do-matury-z-informatyki">&lt;p&gt;Pierwsze, co trzeba sobie uświadomić, to to, że matura z informatyki nie wymaga od nas jakiejś bardzo dobrej znajomości programowania. Niestety, to, na czym trzeba się skupić to Excel i Access. Z programowania wystarczą podstawy programowania proceduralnego.&lt;/p&gt;

&lt;h1 id=&quot;jak-wygląda-matura-z-informatyki&quot;&gt;Jak wygląda matura z informatyki?&lt;/h1&gt;
&lt;p&gt;Matura z informatyki jest podzielona na dwie części. W pierwszej mamy do dyspozycji tylko długopis i kalkulator, a w drugiej komputer.&lt;/p&gt;

&lt;h2 id=&quot;część-pierwsza&quot;&gt;Część pierwsza&lt;/h2&gt;

&lt;p&gt;Tutaj najczęściej trzeba się wykazać znajomością algorytmiki czy matematyczno-logicznym myśleniem. Potrzeba też trochę wiedzy teoretycznej np. konwersja miedzy systemami liczbowymi, znajomość protokołów czy nawet licencji na oprogramowanie. Trafiają się też zadania, że nie potrzebna nam jest wcześniej zdobyta wiedza (lub znacznie mniej na tym się opiera), tylko dostajemy pełen opis jakiegoś zagadnienia w treści i na podstawie tego musimy rozwiązać zadanie.&lt;/p&gt;

&lt;p&gt;Zadania dzielą się na:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;uzupełnianie tabel na podstawie analizy danego algorytmu&lt;/li&gt;
  &lt;li&gt;określenie prawdy/fałszu&lt;/li&gt;
  &lt;li&gt;zapisanie rozwiązania w postaci algorytmu w wybranej notacji (lista kroków lub język programowania)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;część-druga&quot;&gt;Część druga&lt;/h2&gt;

&lt;p&gt;Tu najczęściej mamy 3 zadania - najczęściej dobrane tak, aby trzeba było użyć wszystkich 3 rozwiązań - Excela, Accessa i programowania. Najczęściej, bo czasem nie jest określone jak mamy wykonać dane zadanie, więc możemy użyć czegokolwiek, a czasem jest to wyraźnie określone np. “napisz program, …”. Jednak raczej nie liczyłbym na szczęście i jeśli celujesz w dobry wynik, opanowałbym wszystkie 3 możliwe sposoby rozwiązywania zadań. Tym bardziej, że czasem bywa tak, że np. w Excelu zrobimy coś dużo szybciej niż chcielibyśmy napisać do tego program czy odwrotnie. A jak wiadomo, czas na maturze jest na wagę złota.&lt;/p&gt;

&lt;p&gt;Przeważnie do każdego zadania dostajemy plik (lub więcej) z danymi, na których będziemy operować. Za każdym razem trzeba będzie je zaimportować do wykorzystywanego przez nas narzędzia, przy czym warto zwracać uwagę na określanie typu importowanych danych.
W przypadku Accessa kluczowe jest określenie relacji.&lt;/p&gt;

&lt;p&gt;Tak więc będziesz musiał opanować Excela, Accesa i jeden z języków programowania:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pascal   ¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯&lt;/li&gt;
  &lt;li&gt;C/C++&lt;/li&gt;
  &lt;li&gt;Java&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I od roku szkolnego 2018/2019 będzie można wybrać język
programowania &lt;strong&gt;Python&lt;/strong&gt;, więc się załapiecie - trochę zazdroszczę :) Sam wybrałem Jave, bo w tym kierunku zamierzałem się rozwijać.&lt;/p&gt;

&lt;p&gt;Zadania polegają mniej więcej na:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Przetwarzanie danych&lt;/li&gt;
  &lt;li&gt;Symulacja, np. co będzie za X czasu, jeśli Y&lt;/li&gt;
  &lt;li&gt;Znalezienie skrajnych przypadków dla danego warunku&lt;/li&gt;
  &lt;li&gt;Zrobienie zestawienia jakichś konkretnych danych, które spełniają dany warunek&lt;/li&gt;
  &lt;li&gt;Zrobić wykres&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Itp.&lt;/p&gt;

&lt;p&gt;Wbrew pozorom nie jest to wszystkie takie proste i nad niektórymi “warunkami” trzeba troszkę się pomęczyć, żeby wyciągnąć to co trzeba.&lt;/p&gt;

&lt;h1 id=&quot;jak-się-uczyć-do-matury-z-informatyki&quot;&gt;Jak się uczyć do matury z informatyki?&lt;/h1&gt;

&lt;p&gt;Niestety, zadania maturalne to tak specyficzne zadania, że raczej mało efektywne jest zdobywanie wiedzy w miejscach, które nie są stworzone typowo pod maturę. Na przykład, gdy będziemy chcieli przeczytać książkę o algorytmach, to owszem, znajdziemy tam rzeczy, które nam się przydadzą, ale poza tym będzie tam też masa rzeczy wykraczająca poza zakres matury. Jeśli zależy Ci na czasie i chciałbyś skupić się tylko na maturze, pominąłbym takie źródła. Jeśli jednak czas Cię tak nie goni, warto przyswoić taką wiedzę. Sam korzystałem z:&lt;/p&gt;

&lt;div class=&quot;book&quot;&gt;
    &lt;script src=&quot;https://helion.pl/plugins/new/ksiazkasm.phi?id=algbet&amp;amp;nr=9102Q&amp;amp;size=181&amp;amp;utf8=1&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Możesz też zobaczyć inne polecane &lt;a href=&quot;https://jaki-jezyk-programowania.pl/ksiazki/najlepsze-ksiazki-o-algorytmach/&quot;&gt;książki o algorymtach&lt;/a&gt; na mojej stronie.&lt;/p&gt;

&lt;p&gt;Również zaawansowane techniki programowania czy idealna znajomość programowania obiektowego nie pomoże Ci w lepszym wyniku - ironiczne prawda? No ale tak jest. Do matury wystarczą podstawy, ponieważ główne zadanie to napisanie proceduralnego kodu, który rozwiążę wyimaginowane zadanie maturalne.&lt;/p&gt;

&lt;p&gt;Według mnie, najefektywniejszym sposobem na naukę - tak stricte pod maturę - są materiały od CKE.&lt;/p&gt;

&lt;h2 id=&quot;zadania-maturalne-cke&quot;&gt;Zadania maturalne CKE&lt;/h2&gt;
&lt;p&gt;Na początku polecam zaprzyjaźnić się z zadaniami maturalnymi ze &lt;a href=&quot;https://www.cke.edu.pl/egzamin-maturalny/egzamin-w-nowej-formule/materialy-dodatkowe/materialy-dla-uczniow-i-nauczycieli/zbiory-zadan/&quot;&gt;zbioru zadań od CKE&lt;/a&gt;. Mamy udostępnione również dane i rozwiązania, więc jest to idealny sposób na naukę w pojedynkę - jako samouk. Jest tego całkiem sporo. Po przeklepaniu takiej ilości zadań powinieneś już biegle władać Excelem i Accessem, &lt;strong&gt;co jest najważniejszą i najbardziej kluczową umiejętnością na maturze&lt;/strong&gt; - niestety. W prawdziwym świecie raczej te umiejętności Ci się nie przydadzą, szczególnie Access, ale na maturze liczy się czas i sprawne poruszanie się w tych programach jest ważne, jeśli liczysz na dobry wynik. Zresztą czytałbyś to, jeśli byłoby inaczej?&lt;/p&gt;

&lt;p&gt;Jest to dosyć mozolna praca, ale w ten sposób najlepiej przyzwyczaimy się do typu zadań, jakie są na maturze.&lt;/p&gt;

&lt;p&gt;Tą drogą również ja podążałem, ponieważ w moim technikum &lt;strong&gt;informatycznym&lt;/strong&gt; nikt nie przygotowywał do matury z informatyki. ¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯. Zresztą, jeśli celujemy w dobry wynik, tak czy siak musimy pracować samodzielnie.&lt;/p&gt;

&lt;h2 id=&quot;arkusze-maturalne&quot;&gt;Arkusze maturalne&lt;/h2&gt;
&lt;p&gt;Jako ostatni szlif (np. miesiąc lub dwa przed maturą) polecam przerobić zwykłe oraz próbne arkusze maturalne z poprzednich lat. Tylko tu już z mierzeniem czasu itd. żeby poczuć mniej więcej presję i zobaczyć jak, bardzo cenny jest dla nas czas na maturze ;)&lt;/p&gt;

&lt;p&gt;Wszystkie arkusze i odpowiedzi znajdziesz w Internecie. Jak nie na oficjalnej stronie CKE to na innych stronach czy nawet na YouTube.&lt;/p&gt;

&lt;p&gt;Osobiście przerobiłem wszystkie od roku 2014. Głębiej nie ma co iść bo to już stare dzieje.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jeśli na maturze zamierzasz używać Javy&lt;/strong&gt;, to polecam zobaczyć post &lt;a href=&quot;https://devcave.pl/dajsiepoznac2017/matura-informatyka-przydatne-funkcje-w-javie&quot;&gt;przydatne funkcje w Javie do matury&lt;/a&gt;. Podczas nauki zebrałem większość przydatnych metod w Javie, które mogą się przydać do matury i je tam upamiętniłem dla innych. Mam nadzieję, że coś się przyda! ;)&lt;/p&gt;

&lt;p&gt;To powinno być wystarczające do uzyskania satysfakcjonującego wyniku, jednak nie jest to łatwe. Tych zadań jest naprawdę dużo, szczególnie w zbiorze zadań. Sam nie dałem rady przerobić wszystkiego.&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;
&lt;p&gt;Na początku całkiem inaczej wyobrażałem sobie maturę z informatyki. Bycie dobrym informatykiem niekoniecznie przekłada się na wysoki wynik z matury z informatyki, bo prawda jest taka, najbardziej liczy się szybkie klikanie w okienka Excela i Accessa oraz nauczenie się schematu zadań maturalnych. Bez tego najzwyczajniej braknie nam czasu.&lt;/p&gt;</content><author><name>Codeboy</name></author><category term="Podpowiadam-jak" /><category term="Podpowiadam-jak" /><category term="Matura-Informatyka" /><summary type="html">Pierwsze, co trzeba sobie uświadomić, to to, że matura z informatyki nie wymaga od nas jakiejś bardzo dobrej znajomości programowania. Niestety, to, na czym trzeba się skupić to Excel i Access. Z programowania wystarczą podstawy programowania proceduralnego. Jak wygląda matura z informatyki? Matura z informatyki jest podzielona na dwie części. W pierwszej mamy do dyspozycji tylko długopis i kalkulator, a w drugiej komputer. Część pierwsza Tutaj najczęściej trzeba się wykazać znajomością algorytmiki czy matematyczno-logicznym myśleniem. Potrzeba też trochę wiedzy teoretycznej np. konwersja miedzy systemami liczbowymi, znajomość protokołów czy nawet licencji na oprogramowanie. Trafiają się też zadania, że nie potrzebna nam jest wcześniej zdobyta wiedza (lub znacznie mniej na tym się opiera), tylko dostajemy pełen opis jakiegoś zagadnienia w treści i na podstawie tego musimy rozwiązać zadanie. Zadania dzielą się na: uzupełnianie tabel na podstawie analizy danego algorytmu określenie prawdy/fałszu zapisanie rozwiązania w postaci algorytmu w wybranej notacji (lista kroków lub język programowania) Część druga Tu najczęściej mamy 3 zadania - najczęściej dobrane tak, aby trzeba było użyć wszystkich 3 rozwiązań - Excela, Accessa i programowania. Najczęściej, bo czasem nie jest określone jak mamy wykonać dane zadanie, więc możemy użyć czegokolwiek, a czasem jest to wyraźnie określone np. “napisz program, …”. Jednak raczej nie liczyłbym na szczęście i jeśli celujesz w dobry wynik, opanowałbym wszystkie 3 możliwe sposoby rozwiązywania zadań. Tym bardziej, że czasem bywa tak, że np. w Excelu zrobimy coś dużo szybciej niż chcielibyśmy napisać do tego program czy odwrotnie. A jak wiadomo, czas na maturze jest na wagę złota. Przeważnie do każdego zadania dostajemy plik (lub więcej) z danymi, na których będziemy operować. Za każdym razem trzeba będzie je zaimportować do wykorzystywanego przez nas narzędzia, przy czym warto zwracać uwagę na określanie typu importowanych danych. W przypadku Accessa kluczowe jest określenie relacji. Tak więc będziesz musiał opanować Excela, Accesa i jeden z języków programowania: Pascal   ¯\(ツ)/¯ C/C++ Java I od roku szkolnego 2018/2019 będzie można wybrać język programowania Python, więc się załapiecie - trochę zazdroszczę :) Sam wybrałem Jave, bo w tym kierunku zamierzałem się rozwijać. Zadania polegają mniej więcej na: Przetwarzanie danych Symulacja, np. co będzie za X czasu, jeśli Y Znalezienie skrajnych przypadków dla danego warunku Zrobienie zestawienia jakichś konkretnych danych, które spełniają dany warunek Zrobić wykres Itp. Wbrew pozorom nie jest to wszystkie takie proste i nad niektórymi “warunkami” trzeba troszkę się pomęczyć, żeby wyciągnąć to co trzeba. Jak się uczyć do matury z informatyki? Niestety, zadania maturalne to tak specyficzne zadania, że raczej mało efektywne jest zdobywanie wiedzy w miejscach, które nie są stworzone typowo pod maturę. Na przykład, gdy będziemy chcieli przeczytać książkę o algorytmach, to owszem, znajdziemy tam rzeczy, które nam się przydadzą, ale poza tym będzie tam też masa rzeczy wykraczająca poza zakres matury. Jeśli zależy Ci na czasie i chciałbyś skupić się tylko na maturze, pominąłbym takie źródła. Jeśli jednak czas Cię tak nie goni, warto przyswoić taką wiedzę. Sam korzystałem z: Możesz też zobaczyć inne polecane książki o algorymtach na mojej stronie. Również zaawansowane techniki programowania czy idealna znajomość programowania obiektowego nie pomoże Ci w lepszym wyniku - ironiczne prawda? No ale tak jest. Do matury wystarczą podstawy, ponieważ główne zadanie to napisanie proceduralnego kodu, który rozwiążę wyimaginowane zadanie maturalne. Według mnie, najefektywniejszym sposobem na naukę - tak stricte pod maturę - są materiały od CKE. Zadania maturalne CKE Na początku polecam zaprzyjaźnić się z zadaniami maturalnymi ze zbioru zadań od CKE. Mamy udostępnione również dane i rozwiązania, więc jest to idealny sposób na naukę w pojedynkę - jako samouk. Jest tego całkiem sporo. Po przeklepaniu takiej ilości zadań powinieneś już biegle władać Excelem i Accessem, co jest najważniejszą i najbardziej kluczową umiejętnością na maturze - niestety. W prawdziwym świecie raczej te umiejętności Ci się nie przydadzą, szczególnie Access, ale na maturze liczy się czas i sprawne poruszanie się w tych programach jest ważne, jeśli liczysz na dobry wynik. Zresztą czytałbyś to, jeśli byłoby inaczej? Jest to dosyć mozolna praca, ale w ten sposób najlepiej przyzwyczaimy się do typu zadań, jakie są na maturze. Tą drogą również ja podążałem, ponieważ w moim technikum informatycznym nikt nie przygotowywał do matury z informatyki. ¯\(ツ)/¯. Zresztą, jeśli celujemy w dobry wynik, tak czy siak musimy pracować samodzielnie. Arkusze maturalne Jako ostatni szlif (np. miesiąc lub dwa przed maturą) polecam przerobić zwykłe oraz próbne arkusze maturalne z poprzednich lat. Tylko tu już z mierzeniem czasu itd. żeby poczuć mniej więcej presję i zobaczyć jak, bardzo cenny jest dla nas czas na maturze ;) Wszystkie arkusze i odpowiedzi znajdziesz w Internecie. Jak nie na oficjalnej stronie CKE to na innych stronach czy nawet na YouTube. Osobiście przerobiłem wszystkie od roku 2014. Głębiej nie ma co iść bo to już stare dzieje. Jeśli na maturze zamierzasz używać Javy, to polecam zobaczyć post przydatne funkcje w Javie do matury. Podczas nauki zebrałem większość przydatnych metod w Javie, które mogą się przydać do matury i je tam upamiętniłem dla innych. Mam nadzieję, że coś się przyda! ;) To powinno być wystarczające do uzyskania satysfakcjonującego wyniku, jednak nie jest to łatwe. Tych zadań jest naprawdę dużo, szczególnie w zbiorze zadań. Sam nie dałem rady przerobić wszystkiego. Podsumowanie Na początku całkiem inaczej wyobrażałem sobie maturę z informatyki. Bycie dobrym informatykiem niekoniecznie przekłada się na wysoki wynik z matury z informatyki, bo prawda jest taka, najbardziej liczy się szybkie klikanie w okienka Excela i Accessa oraz nauczenie się schematu zadań maturalnych. Bez tego najzwyczajniej braknie nam czasu.</summary></entry><entry><title type="html">Praktyki w Technikum Informatycznym i Erasmus</title><link href="https://devcave.pl/moje-do%C5%9Bwiadczenia/praktyki-zawodowe-w-technikum-informatycznym" rel="alternate" type="text/html" title="Praktyki w Technikum Informatycznym i Erasmus" /><published>2017-11-20T13:00:00+01:00</published><updated>2017-11-20T13:00:00+01:00</updated><id>https://devcave.pl/moje-do%C5%9Bwiadczenia/praktyki-zawodowe-w-technikum-informatycznym</id><content type="html" xml:base="https://devcave.pl/moje-do%C5%9Bwiadczenia/praktyki-zawodowe-w-technikum-informatycznym">&lt;p&gt;W poście &lt;a href=&quot;https://devcave.pl/wybory-programisty/liceum-vs-technikum-co-wybrac&quot;&gt;Liceum vs Technikum&lt;/a&gt; temat praktyk zawodowych dotknąłem tylko delikatnie i zapowiedziałem, że napiszę o tym osobny post. I oto on. Całość opiszę z perspektywy programisty.&lt;/p&gt;

&lt;h1 id=&quot;praktyki-zawodowe-w-technikum-informatycznym&quot;&gt;Praktyki zawodowe w Technikum Informatycznym&lt;/h1&gt;

&lt;p&gt;Z założenia, praktyki zawodowe trwają przez miesiąc i mają nam dać trochę doświadczenia zawodowego oraz papier, który pomoże nam łatwiej znaleźć prace. Jak to jest naprawdę?&lt;/p&gt;

&lt;p&gt;Z tym bywa różnie.&lt;/p&gt;

&lt;p&gt;Część praktyk jest organizowana przez szkołę z firmami, z którymi współpracuje. I tu to trochę loteria, no chyba, że macie jakieś potwierdzone informacje o jakości oferowanych praktyk. Gdy nie skorzystamy z praktyk oferowanych przez szkołę, musimy coś sobie znaleźć na własną rękę. Tu już sprawa zależy od naszych starań.&lt;/p&gt;

&lt;p&gt;W obu przypadkach miałem kolegów, którzy nie robili praktycznie nic albo jakieś błahe rzeczy, typu podawanie papieru do drukarki. Jeden z nich nawet nie musiał na nie chodzić. Więc tak jak mówię - albo liczymy na szczęście, że szkoła nam zaoferuje coś ciekawego albo musimy sami się o to postarać.&lt;/p&gt;

&lt;p&gt;Jest jeszcze trzecia opcja, z której ja skorzystałem - Erasums.&lt;/p&gt;

&lt;h1 id=&quot;erasmus&quot;&gt;Erasmus&lt;/h1&gt;

&lt;p&gt;Jest to projekt, który umożliwia wyjazd zagraniczny na miesięczne praktyki zawodowe. W mojej szkole mogło z niego skorzystać 20 osób z najlepszymi wynikami pośród 3 klas informatycznych (ok. 30 osobowych). Był to wyjazd do &lt;strong&gt;Londynu&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Według mnie jest to najlepsza opcja na praktyki zawodowe, ponieważ najczęściej będzie to przyjemne doświadczenie, bez względu na to czy trafimy na jakieś dobre praktyki czy nie.&lt;/p&gt;

&lt;p&gt;Dla mnie, jak to pisałem w poście &lt;a href=&quot;https://devcave.pl/wybory-programisty/liceum-vs-technikum-co-wybrac&quot;&gt;Liceum vs Technikum&lt;/a&gt;, był to prawie jedyny plus pójścia do technikum. Streszczę mniej więcej jak to wyglądało z mojego punktu widzenia.&lt;/p&gt;

&lt;h2 id=&quot;kwestie-finansowe&quot;&gt;Kwestie finansowe&lt;/h2&gt;

&lt;p&gt;Bardzo dużym plusem całego projektu jest to, że wyjaz nas praktycznie nic nie kosztuje. Jest w pełni dofinansowywany. Nie płacimy za zakwaterowanie, za wyżywienie - za nic.  Do tego dostajemy jeszcze kieszonkowe na drobne wydatki, więc praktycznie wychodzimy na 0.&lt;/p&gt;

&lt;p&gt;Niektórzy mieli nawet takie szczęście (w tym ja :D), że dostawali drobne “na kawę” od pracodawców w postaci 5 funtów. Niby to mało, ale nie powinniśmy dostawać nic. Na te 20 osób były chyba tylko 3, które tak miały. Osobiście uważam, że to było sporo, bo 5 funtów * 20 (5 dni w tygodniu) = 100 funtów, a to daje w przybliżeniu 475 zł - &lt;strong&gt;dodatkowo&lt;/strong&gt;. Dzięki temu cały wyjazd wyszedł nawet na plus, mimo kilku większych “niekontrolowanych” wydatków. M.in. jedno wyjście do pubu, gdzie z kolegą zostawiliśmy razem jakieś 400 zł czy przejażdżka publicznymi rowerami za około 100zł, bo nie do końca dobrze doczytaliśmy jak naliczane są opłaty :D&lt;/p&gt;

&lt;h2 id=&quot;warunki-życia&quot;&gt;Warunki życia&lt;/h2&gt;

&lt;p&gt;Ja na pewno nie miałem co narzekać. Pokój, który dzieliłem z kolegą, był co prawda nieduży, ale nic poza tym nam nie brakowało.&lt;/p&gt;

&lt;h3 id=&quot;mieszkanie&quot;&gt;Mieszkanie&lt;/h3&gt;
&lt;p&gt;Wszyscy uczestnicy projektu są rozrzuceni po Londynie w mniejszych 2-4 osobowych grupkach.&lt;/p&gt;

&lt;p&gt;My mieszkaliśmy w domku jednorodzinnym w dzielnicy Harrow na ulicy Brookfield Cres. Są to obrzeża Londynu. Do centrum mieliśmy jakieś 20 minut.&lt;/p&gt;

&lt;p&gt;Mieliśmy do dyspozycji dosyć mały pokój dwuosobowy, łazienkę, kuchnię i taras z niedużym podwórkiem. Ogólnie było schludnie i przyjemnie.&lt;/p&gt;

&lt;h3 id=&quot;właściciele&quot;&gt;Właściciele&lt;/h3&gt;
&lt;p&gt;Razem z nami mieszkało małżeństwo, a na weekend przyjeżdżały ich dzieci. Nie zapytaliśmy o ich pochodzenie, ale nie byli to rodowici Anglicy - zresztą takich chyba już jest tam mało ;)&lt;/p&gt;

&lt;p&gt;Ogólnie byli bardzo mili i sympatyczni. Można się było bez problemu dogadać praktycznie ze wszystkim. Czasem zamienialiśmy kilka słów, ale na ogół zajmowaliśmy się swoimi sprawami.&lt;/p&gt;

&lt;p&gt;Można powiedzieć, że dobrze trafiliśmy, bo nie każdy mógł powiedzieć dobre słowo o właścicielach domu.&lt;/p&gt;

&lt;h3 id=&quot;jedzenie&quot;&gt;Jedzenie&lt;/h3&gt;

&lt;p&gt;Podczas wyjazdu mieliśmy zagwarantowane śniadanie, obiad i kolację. We własnym zakresie był tylko lunch w pracy.&lt;/p&gt;

&lt;p&gt;I tutaj muszę bardzo pochwalić panią domu, bo gotowała świetnie. Jak wracałem z pracy z kolegą to myśleliśmy tylko o tym co będzie dziś dobrego i jak bardzo się najemy. Czasem były tak duże porcje, że mieliśmy po 1-2 dokładki.&lt;/p&gt;

&lt;p&gt;Jednak z tego co słyszeliśmy, nie każdy miał tak dobrze jak my. Na przykład, jedna koleżanka narzekała, że codziennie na śniadanie dają jej jakąś pasze dla zwierząt :D&lt;/p&gt;

&lt;h2 id=&quot;obowiązki&quot;&gt;Obowiązki&lt;/h2&gt;

&lt;p&gt;To, z czego musieliśmy się wywiązywać i było obowiązkowe to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;od poniedziałku do piątku bycie na praktykach, zazwyczaj od 9-10&lt;/li&gt;
  &lt;li&gt;co drugi weekend były obowiązkowe wycieczki po Londynie&lt;/li&gt;
  &lt;li&gt;kilka spotkań formalnych, które były w godzinach pracy, więc nie zabierały nam dodatkowo wolnego czasu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Poza tym byliśmy całkowicie wolni i mogliśmy robić co tylko chcieliśmy. Formalnie max do 22, ale z właścicielami domu mieliśmy bardzo dobre relacje i mogliśmy wracać duuużo później. Jednak nie każdy mógł sobie na to pozwolić, a niektórzy już się spalili niedługo po przyjeździe. Więc no, trzeba zrobić dobre pierwsze wrażenie ;)&lt;/p&gt;

&lt;h2 id=&quot;praktyki&quot;&gt;Praktyki&lt;/h2&gt;

&lt;p&gt;Czyli wreszcie główny cel wyjazdu. Niestety, nawet na organizowanych praktykach zagranicznych zdarzało się, że praca polegała na obsłudze drukarki. Trafiło to się kilku osobom i według mnie to jest straszne.&lt;/p&gt;

&lt;p&gt;Na szczęście ja miałem trochę lepiej, ale też bez szału. Pracowałem w serwisie komputerowym po drugiej stronie Londynu. Dojazd tam zajmował mi jakoś 45 min w jedną stronę, ale nie narzekałem bardzo na to. Jeździłem tylko 2 liniami metra (w przeciwieństwie do kolegi, który musiał dojeżdżać kilkoma autobusami i metrem), zawszę miałem miejsce siedzące i mogłem sobie coś robić. Dzięki temu przeczytałem kilka książek, więc nie było to dla mnie uciążliwe.&lt;/p&gt;

&lt;p&gt;Moja praca polegała na drobnych naprawach laptopów, czasem telefonów i PC. Niestety nie było to nic związanego z programowaniem, a liczyłem na to. Szczerze mówiąc to niewiele osób miało pracę z tym związaną. Jeden znajomy zajmował się poprawianiem stronki na WordPressie i to była chyba najbardziej programistyczna praca na tym wyjeździe. Po zakończonych praktykach zaproponowali mu nawet dalsze prowadzenie strony zdalnie, więc jak widać można sobie nawet wyrobić kilka kontaktów czy znaleźć dodatkową pracę ;)&lt;/p&gt;

&lt;p&gt;Ogólnie nie wspominam tego źle, przyjemnie się pracowało. Właściciele serwisu byli sympatyczni i można było spędzić dzień w “pracy” w miłej atmosferze. Trochę z tych praktyk wyniosłem, nie można powiedzieć, że nie, ale też często naprawa polegała na reinstalacji systemu i softu + backup danych, co było dosyć nużące. Tak czy siak nie miałem najgorzej.&lt;/p&gt;

&lt;h2 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h2&gt;

&lt;p&gt;Praktyki zagraniczne wspominam wyjątkowo dobrze. Dużo się działo, zwiedziłem masę miejsc i w ogóle samo bycie w Londynie, prawie że na własną rękę, to bardzo fajne doświadczenie. Przez cały wyjazd oficjalnych spotkań było może z cztery, więc większość czasu można się było czuć, jakbyśmy żyli tam sami. Była to też dobra okazja do oswojenia się z mówionym językiem angielskim.&lt;/p&gt;

&lt;p&gt;Co do uzyskanego papierka i doświadczenia z praktyk, osobiście uważam, że nie jest to zbyt wartościowe, tym bardziej dla programisty. No chyba, że trafimy na coś programistycznego, ale tak jak pisałem - z tym jest ciężko. Nie umieszczałem w swoim CV ani kwalifikacji zawodowych, ani odbytych praktyk, a pracę dostałem bez żadnych znajomości od razu po szkole. Czy jakbym załączył te informacje w CV to byłoby mi łatwiej? Nie sądzę, bo na rozmowach nawet słowo nie padło w tym kierunku.&lt;/p&gt;

&lt;p&gt;Jedynie czego żałuję w tym wyjeździe to tego, że nie miałem praktyk związanych z programowaniem. No ale na to nie mamy wpływu. Dostajemy to z góry. Ogólnie wyjazd oceniam na 9/10 i szczerze polecam tę opcję. Było tak dobrze, że nie chciało nam się wracać do Polski ;)&lt;/p&gt;</content><author><name>Codeboy</name></author><category term="Moje-doświadczenia" /><category term="Moje-doświadczenia" /><summary type="html">W poście Liceum vs Technikum temat praktyk zawodowych dotknąłem tylko delikatnie i zapowiedziałem, że napiszę o tym osobny post. I oto on. Całość opiszę z perspektywy programisty. Praktyki zawodowe w Technikum Informatycznym Z założenia, praktyki zawodowe trwają przez miesiąc i mają nam dać trochę doświadczenia zawodowego oraz papier, który pomoże nam łatwiej znaleźć prace. Jak to jest naprawdę? Z tym bywa różnie. Część praktyk jest organizowana przez szkołę z firmami, z którymi współpracuje. I tu to trochę loteria, no chyba, że macie jakieś potwierdzone informacje o jakości oferowanych praktyk. Gdy nie skorzystamy z praktyk oferowanych przez szkołę, musimy coś sobie znaleźć na własną rękę. Tu już sprawa zależy od naszych starań. W obu przypadkach miałem kolegów, którzy nie robili praktycznie nic albo jakieś błahe rzeczy, typu podawanie papieru do drukarki. Jeden z nich nawet nie musiał na nie chodzić. Więc tak jak mówię - albo liczymy na szczęście, że szkoła nam zaoferuje coś ciekawego albo musimy sami się o to postarać. Jest jeszcze trzecia opcja, z której ja skorzystałem - Erasums. Erasmus Jest to projekt, który umożliwia wyjazd zagraniczny na miesięczne praktyki zawodowe. W mojej szkole mogło z niego skorzystać 20 osób z najlepszymi wynikami pośród 3 klas informatycznych (ok. 30 osobowych). Był to wyjazd do Londynu. Według mnie jest to najlepsza opcja na praktyki zawodowe, ponieważ najczęściej będzie to przyjemne doświadczenie, bez względu na to czy trafimy na jakieś dobre praktyki czy nie. Dla mnie, jak to pisałem w poście Liceum vs Technikum, był to prawie jedyny plus pójścia do technikum. Streszczę mniej więcej jak to wyglądało z mojego punktu widzenia. Kwestie finansowe Bardzo dużym plusem całego projektu jest to, że wyjaz nas praktycznie nic nie kosztuje. Jest w pełni dofinansowywany. Nie płacimy za zakwaterowanie, za wyżywienie - za nic. Do tego dostajemy jeszcze kieszonkowe na drobne wydatki, więc praktycznie wychodzimy na 0. Niektórzy mieli nawet takie szczęście (w tym ja :D), że dostawali drobne “na kawę” od pracodawców w postaci 5 funtów. Niby to mało, ale nie powinniśmy dostawać nic. Na te 20 osób były chyba tylko 3, które tak miały. Osobiście uważam, że to było sporo, bo 5 funtów * 20 (5 dni w tygodniu) = 100 funtów, a to daje w przybliżeniu 475 zł - dodatkowo. Dzięki temu cały wyjazd wyszedł nawet na plus, mimo kilku większych “niekontrolowanych” wydatków. M.in. jedno wyjście do pubu, gdzie z kolegą zostawiliśmy razem jakieś 400 zł czy przejażdżka publicznymi rowerami za około 100zł, bo nie do końca dobrze doczytaliśmy jak naliczane są opłaty :D Warunki życia Ja na pewno nie miałem co narzekać. Pokój, który dzieliłem z kolegą, był co prawda nieduży, ale nic poza tym nam nie brakowało. Mieszkanie Wszyscy uczestnicy projektu są rozrzuceni po Londynie w mniejszych 2-4 osobowych grupkach. My mieszkaliśmy w domku jednorodzinnym w dzielnicy Harrow na ulicy Brookfield Cres. Są to obrzeża Londynu. Do centrum mieliśmy jakieś 20 minut. Mieliśmy do dyspozycji dosyć mały pokój dwuosobowy, łazienkę, kuchnię i taras z niedużym podwórkiem. Ogólnie było schludnie i przyjemnie. Właściciele Razem z nami mieszkało małżeństwo, a na weekend przyjeżdżały ich dzieci. Nie zapytaliśmy o ich pochodzenie, ale nie byli to rodowici Anglicy - zresztą takich chyba już jest tam mało ;) Ogólnie byli bardzo mili i sympatyczni. Można się było bez problemu dogadać praktycznie ze wszystkim. Czasem zamienialiśmy kilka słów, ale na ogół zajmowaliśmy się swoimi sprawami. Można powiedzieć, że dobrze trafiliśmy, bo nie każdy mógł powiedzieć dobre słowo o właścicielach domu. Jedzenie Podczas wyjazdu mieliśmy zagwarantowane śniadanie, obiad i kolację. We własnym zakresie był tylko lunch w pracy. I tutaj muszę bardzo pochwalić panią domu, bo gotowała świetnie. Jak wracałem z pracy z kolegą to myśleliśmy tylko o tym co będzie dziś dobrego i jak bardzo się najemy. Czasem były tak duże porcje, że mieliśmy po 1-2 dokładki. Jednak z tego co słyszeliśmy, nie każdy miał tak dobrze jak my. Na przykład, jedna koleżanka narzekała, że codziennie na śniadanie dają jej jakąś pasze dla zwierząt :D Obowiązki To, z czego musieliśmy się wywiązywać i było obowiązkowe to: od poniedziałku do piątku bycie na praktykach, zazwyczaj od 9-10 co drugi weekend były obowiązkowe wycieczki po Londynie kilka spotkań formalnych, które były w godzinach pracy, więc nie zabierały nam dodatkowo wolnego czasu Poza tym byliśmy całkowicie wolni i mogliśmy robić co tylko chcieliśmy. Formalnie max do 22, ale z właścicielami domu mieliśmy bardzo dobre relacje i mogliśmy wracać duuużo później. Jednak nie każdy mógł sobie na to pozwolić, a niektórzy już się spalili niedługo po przyjeździe. Więc no, trzeba zrobić dobre pierwsze wrażenie ;) Praktyki Czyli wreszcie główny cel wyjazdu. Niestety, nawet na organizowanych praktykach zagranicznych zdarzało się, że praca polegała na obsłudze drukarki. Trafiło to się kilku osobom i według mnie to jest straszne. Na szczęście ja miałem trochę lepiej, ale też bez szału. Pracowałem w serwisie komputerowym po drugiej stronie Londynu. Dojazd tam zajmował mi jakoś 45 min w jedną stronę, ale nie narzekałem bardzo na to. Jeździłem tylko 2 liniami metra (w przeciwieństwie do kolegi, który musiał dojeżdżać kilkoma autobusami i metrem), zawszę miałem miejsce siedzące i mogłem sobie coś robić. Dzięki temu przeczytałem kilka książek, więc nie było to dla mnie uciążliwe. Moja praca polegała na drobnych naprawach laptopów, czasem telefonów i PC. Niestety nie było to nic związanego z programowaniem, a liczyłem na to. Szczerze mówiąc to niewiele osób miało pracę z tym związaną. Jeden znajomy zajmował się poprawianiem stronki na WordPressie i to była chyba najbardziej programistyczna praca na tym wyjeździe. Po zakończonych praktykach zaproponowali mu nawet dalsze prowadzenie strony zdalnie, więc jak widać można sobie nawet wyrobić kilka kontaktów czy znaleźć dodatkową pracę ;) Ogólnie nie wspominam tego źle, przyjemnie się pracowało. Właściciele serwisu byli sympatyczni i można było spędzić dzień w “pracy” w miłej atmosferze. Trochę z tych praktyk wyniosłem, nie można powiedzieć, że nie, ale też często naprawa polegała na reinstalacji systemu i softu + backup danych, co było dosyć nużące. Tak czy siak nie miałem najgorzej. Podsumowanie Praktyki zagraniczne wspominam wyjątkowo dobrze. Dużo się działo, zwiedziłem masę miejsc i w ogóle samo bycie w Londynie, prawie że na własną rękę, to bardzo fajne doświadczenie. Przez cały wyjazd oficjalnych spotkań było może z cztery, więc większość czasu można się było czuć, jakbyśmy żyli tam sami. Była to też dobra okazja do oswojenia się z mówionym językiem angielskim. Co do uzyskanego papierka i doświadczenia z praktyk, osobiście uważam, że nie jest to zbyt wartościowe, tym bardziej dla programisty. No chyba, że trafimy na coś programistycznego, ale tak jak pisałem - z tym jest ciężko. Nie umieszczałem w swoim CV ani kwalifikacji zawodowych, ani odbytych praktyk, a pracę dostałem bez żadnych znajomości od razu po szkole. Czy jakbym załączył te informacje w CV to byłoby mi łatwiej? Nie sądzę, bo na rozmowach nawet słowo nie padło w tym kierunku. Jedynie czego żałuję w tym wyjeździe to tego, że nie miałem praktyk związanych z programowaniem. No ale na to nie mamy wpływu. Dostajemy to z góry. Ogólnie wyjazd oceniam na 9/10 i szczerze polecam tę opcję. Było tak dobrze, że nie chciało nam się wracać do Polski ;)</summary></entry><entry><title type="html">Formularz kontaktowy bez backendu/bez PHP</title><link href="https://devcave.pl/frontend/formularz-kontaktowy-bez-backendu" rel="alternate" type="text/html" title="Formularz kontaktowy bez backendu/bez PHP" /><published>2017-11-15T13:00:00+01:00</published><updated>2017-11-15T13:00:00+01:00</updated><id>https://devcave.pl/frontend/formularz-kontaktowy-bez-backendu</id><content type="html" xml:base="https://devcave.pl/frontend/formularz-kontaktowy-bez-backendu">&lt;p&gt;Podczas DSP2017 tworzyłem formularz kontaktowy dla &lt;a href=&quot;https://jaki-jezyk-programowania.pl/&quot;&gt;jaki-jezyk-programowania.pl&lt;/a&gt; z wykorzystaniem PHP, który działał na wykupionym serwerze. Później  jednak przeniosłem swoją stronę i bloga na Github Pages, gdzie z PHP już nie można było zrobić użytku. Wysyłanie wiadomości email bez backendu wydawało mi się niemożliwe i myślałem, że już muszę zrezygnować z formularza kontaktowego na stronie. Jednak na ratunek przyszła mi strona &lt;a href=&quot;https://formspree.io/&quot;&gt;formspree.io&lt;/a&gt;, za pośrednictwem której możliwe jest wysyłanie wiadomości email na dowolnego maila.&lt;/p&gt;

&lt;h1 id=&quot;co-zawiera-i-jak-działa-formularz&quot;&gt;Co zawiera i jak działa formularz?&lt;/h1&gt;
&lt;p&gt;Formularz jest ulepszoną wersją tego, który tworzyłem podczas DSP2017. Tyle, że bez PHP. Jednak jeśli nie widziałeś wcześniejszych postów to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Jest otwierany w formie okienka za pomocą przycisku.&lt;/li&gt;
  &lt;li&gt;Jest wysyłany asynchronicznie, wykorzystując AJAX - czyli bez przeładowania strony.&lt;/li&gt;
  &lt;li&gt;Walidacja odbywa się w Javascript z wykorzystaniem Validation API. Gdy coś jest nie tak, użytkownik dostaje wiadomość.&lt;/li&gt;
  &lt;li&gt;Zadbałem też o kwestie dostępności, np. komunikaty mogą być odczytane przez czytniki ekranowe, obsługa klawiaturą (m.in. zamykanie ESC czy zapętlone tabowanie) itd.&lt;/li&gt;
  &lt;li&gt;Jest w pełni responsywny - poprawnie wyświetla się na każdym ekranie.&lt;/li&gt;
  &lt;li&gt;Formularz można też otworzyć z linka, np. &lt;a href=&quot;https://jaki-jezyk-programowania.pl/#formularz-kontaktowy&quot;&gt;jaki-jezyk-programowania.pl/#formularz-kontaktowy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Udostępniam go na &lt;a href=&quot;https://github.com/C0deboy/contact-form-no-backend&quot;&gt;Githubie&lt;/a&gt; w osobnym repozytorium. Podejrzyj online &lt;a href=&quot;https://c0deboy.github.io/contact-form-no-backend/&quot;&gt;tutaj&lt;/a&gt;. Możesz go wykorzystać na swojej stronie. Jedyne czego wymaga to HTML, Javascript i jQuery - ale praktycznie tylko do AJAX. Jeśli nie używasz na swojej stronie jQuery nie ma sensu dołączać tej kobyły tylko do tego. Możesz przepisać to z użyciem czegoś lżejszego lub w czystym Javascriptcie.&lt;/p&gt;

&lt;h1 id=&quot;kroki-które-musisz-wykonać&quot;&gt;Kroki, które musisz wykonać&lt;/h1&gt;

&lt;h2 id=&quot;pliki&quot;&gt;Pliki&lt;/h2&gt;
&lt;p&gt;Pobierz paczkę z &lt;a href=&quot;https://github.com/C0deboy/contact-form-no-backend&quot;&gt;Githuba&lt;/a&gt;. Umieść plik JS i CSS w swoim projekcie.&lt;/p&gt;

&lt;h2 id=&quot;przygotowanie-strony-z-formularzem&quot;&gt;Przygotowanie strony z formularzem&lt;/h2&gt;

&lt;p&gt;Otwórz plik &lt;span class=&quot;file&quot;&gt;index.html&lt;/span&gt;, skąd będziesz mógł wziąć potrzebne elementy. Zamieszczę je również tutaj, ale z czasem mogą ulec zmianie, więc lepiej je brać bezpośrednio z &lt;span class=&quot;file&quot;&gt;index.html&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;I tak jak w tym pliku, w sekcji &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; na swojej stronie załącz arkusz styli CSS, reCAPTCHA i Font Awesome - jeśli chcesz mieć ładne ikonki:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;css/form.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.google.com/recaptcha/api.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Przed końcem sekcji &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; załącz formularz:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;formularz-kontaktowy&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;contact&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;role=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialog&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Formularz kontaktowy&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-hidden=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;emailForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://formspree.io/your.email@example.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;half&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-live=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;polite&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            Twój email
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-data&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Wpisz tu twój email&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;half&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-live=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;polite&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            Temat
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-data&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_subject&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Wpisz tu temat wiadomości&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minlength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;maxlength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;78&quot;&lt;/span&gt;
                   &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-live=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;polite&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            Wiadomość
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;form-data&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Wpisz tu twoją wiadomość&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;minlength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt;
                      &lt;span class=&quot;na&quot;&gt;maxlength=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;6000&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;recaptcha-label&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-live=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;polite&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;g-recaptcha&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tabindex=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-sitekey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;6LevbxMUAAAAAIa8dsrFNJn0S_b_t5K8INV4z2JD&quot;&lt;/span&gt;
                 &lt;span class=&quot;na&quot;&gt;data-callback=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;recaptchaClearErr&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;emailFormSubmit main-btn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Wyślij&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;emailFormAlert&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-live=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;polite&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;close-contact-btn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;close-btn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-label=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Zamknij formularz kontaktowy&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Zamknij formularz kontaktowy&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fa fa-times close-form&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;oraz jQuery i plik JS z obsługą formularza:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://code.jquery.com/jquery-3.2.1.min.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;js/emailform.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Następnie umieść przycisk do otwierania formularza w wybranym przez siebie miejscu:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;open-contact-btn&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main-btn&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fa fa-envelope-o&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-hidden=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Formularz kontaktowy
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;twój-email-i-site-key&quot;&gt;Twój email i site key&lt;/h2&gt;

&lt;p&gt;Podaj twój email w atrybucie &lt;code class=&quot;highlight&quot;&gt;&lt;span class=&quot;na&quot;&gt;action&lt;/span&gt;&lt;/code&gt; formularza:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;emailForm&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://formspree.io/your.email@example.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Zdobądź &lt;a href=&quot;https://www.google.com/recaptcha/admin&quot;&gt;reCAPTCHA V2&lt;/a&gt; site key i kopiuj wklej go do atrybutu &lt;code class=&quot;highlight&quot;&gt;&lt;span class=&quot;na&quot;&gt;data-sitekey&lt;/span&gt;&lt;/code&gt; w:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;g-recaptcha&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tabindex=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-sitekey=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;6Lc9_xMUAAAAAFPVNhvDKb9lMXHGI4o7-zhqkTgL&quot;&lt;/span&gt;
                 &lt;span class=&quot;na&quot;&gt;data-callback=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;recaptchaClearErr&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ostatni-krok&quot;&gt;Ostatni krok&lt;/h2&gt;
&lt;p&gt;Użyj formularza i wyślij pierwszą wiadomość - obojętnie co. Dostaniesz maila od formspree.io, gdzie będziesz mógł potwierdzić, że chcesz otrzymywać maile ze swojej strony.&lt;/p&gt;

&lt;p&gt;I gotowe. Od tej pory wszystkie maila wysłane za pomocą tego formularza będą trafiać na twoją skrzynkę.&lt;/p&gt;</content><author><name>Codeboy</name></author><category term="Frontend" /><category term="Frontend" /><category term="Jak-zrobić" /><category term="Formularz-kontaktowy" /><summary type="html">Podczas DSP2017 tworzyłem formularz kontaktowy dla jaki-jezyk-programowania.pl z wykorzystaniem PHP, który działał na wykupionym serwerze. Później jednak przeniosłem swoją stronę i bloga na Github Pages, gdzie z PHP już nie można było zrobić użytku. Wysyłanie wiadomości email bez backendu wydawało mi się niemożliwe i myślałem, że już muszę zrezygnować z formularza kontaktowego na stronie. Jednak na ratunek przyszła mi strona formspree.io, za pośrednictwem której możliwe jest wysyłanie wiadomości email na dowolnego maila. Co zawiera i jak działa formularz? Formularz jest ulepszoną wersją tego, który tworzyłem podczas DSP2017. Tyle, że bez PHP. Jednak jeśli nie widziałeś wcześniejszych postów to: Jest otwierany w formie okienka za pomocą przycisku. Jest wysyłany asynchronicznie, wykorzystując AJAX - czyli bez przeładowania strony. Walidacja odbywa się w Javascript z wykorzystaniem Validation API. Gdy coś jest nie tak, użytkownik dostaje wiadomość. Zadbałem też o kwestie dostępności, np. komunikaty mogą być odczytane przez czytniki ekranowe, obsługa klawiaturą (m.in. zamykanie ESC czy zapętlone tabowanie) itd. Jest w pełni responsywny - poprawnie wyświetla się na każdym ekranie. Formularz można też otworzyć z linka, np. jaki-jezyk-programowania.pl/#formularz-kontaktowy Udostępniam go na Githubie w osobnym repozytorium. Podejrzyj online tutaj. Możesz go wykorzystać na swojej stronie. Jedyne czego wymaga to HTML, Javascript i jQuery - ale praktycznie tylko do AJAX. Jeśli nie używasz na swojej stronie jQuery nie ma sensu dołączać tej kobyły tylko do tego. Możesz przepisać to z użyciem czegoś lżejszego lub w czystym Javascriptcie. Kroki, które musisz wykonać Pliki Pobierz paczkę z Githuba. Umieść plik JS i CSS w swoim projekcie. Przygotowanie strony z formularzem Otwórz plik index.html, skąd będziesz mógł wziąć potrzebne elementy. Zamieszczę je również tutaj, ale z czasem mogą ulec zmianie, więc lepiej je brać bezpośrednio z index.html. I tak jak w tym pliku, w sekcji &amp;lt;head&amp;gt; na swojej stronie załącz arkusz styli CSS, reCAPTCHA i Font Awesome - jeśli chcesz mieć ładne ikonki: &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;css/form.css&quot;&amp;gt; &amp;lt;script src=&quot;https://www.google.com/recaptcha/api.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css&quot;&amp;gt; Przed końcem sekcji &amp;lt;body&amp;gt; załącz formularz: &amp;lt;div id=&quot;formularz-kontaktowy&quot; class=&quot;contact&quot; role=&quot;dialog&quot; aria-label=&quot;Formularz kontaktowy&quot; aria-hidden=&quot;true&quot;&amp;gt; &amp;lt;form class=&quot;emailForm&quot; method=&quot;POST&quot; action=&quot;https://formspree.io/your.email@example.com&quot;&amp;gt; &amp;lt;label class=&quot;half&quot; aria-live=&quot;polite&quot;&amp;gt; Twój email &amp;lt;input class=&quot;form-data&quot; name=&quot;email&quot; type=&quot;email&quot; placeholder=&quot;Wpisz tu twój email&quot; required&amp;gt; &amp;lt;/label&amp;gt; &amp;lt;label class=&quot;half&quot; aria-live=&quot;polite&quot;&amp;gt; Temat &amp;lt;input class=&quot;form-data&quot; name=&quot;_subject&quot; placeholder=&quot;Wpisz tu temat wiadomości&quot; minlength=&quot;4&quot; maxlength=&quot;78&quot; required&amp;gt; &amp;lt;/label&amp;gt; &amp;lt;label aria-live=&quot;polite&quot;&amp;gt; Wiadomość &amp;lt;textarea class=&quot;form-data&quot; name=&quot;message&quot; placeholder=&quot;Wpisz tu twoją wiadomość&quot; minlength=&quot;4&quot; maxlength=&quot;6000&quot; required&amp;gt;&amp;lt;/textarea&amp;gt; &amp;lt;/label&amp;gt; &amp;lt;label class=&quot;recaptcha-label&quot; aria-live=&quot;polite&quot;&amp;gt; &amp;lt;div class=&quot;g-recaptcha&quot; tabindex=&quot;-1&quot; data-sitekey=&quot;6LevbxMUAAAAAIa8dsrFNJn0S_b_t5K8INV4z2JD&quot; data-callback=&quot;recaptchaClearErr&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/label&amp;gt; &amp;lt;button class=&quot;emailFormSubmit main-btn&quot; name=&quot;submit&quot; type=&quot;submit&quot;&amp;gt;Wyślij&amp;lt;/button&amp;gt; &amp;lt;div class=&quot;emailFormAlert&quot; aria-live=&quot;polite&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;button type=&quot;button&quot; id=&quot;close-contact-btn&quot; class=&quot;close-btn&quot; aria-label=&quot;Zamknij formularz kontaktowy&quot; title=&quot;Zamknij formularz kontaktowy&quot;&amp;gt; &amp;lt;i class=&quot;fa fa-times close-form&quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; oraz jQuery i plik JS z obsługą formularza: &amp;lt;script src=&quot;https://code.jquery.com/jquery-3.2.1.min.js&quot; integrity=&quot;sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=&quot; crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&quot;js/emailform.js&quot;&amp;gt;&amp;lt;/script&amp;gt; Następnie umieść przycisk do otwierania formularza w wybranym przez siebie miejscu: &amp;lt;button id=&quot;open-contact-btn&quot; class=&quot;main-btn&quot;&amp;gt; &amp;lt;i class=&quot;fa fa-envelope-o&quot; aria-hidden=&quot;true&quot;&amp;gt;&amp;lt;/i&amp;gt; Formularz kontaktowy &amp;lt;/button&amp;gt; Twój email i site key Podaj twój email w atrybucie action formularza: &amp;lt;form class=&quot;emailForm&quot; method=&quot;POST&quot; action=&quot;https://formspree.io/your.email@example.com&quot;&amp;gt; &amp;lt;!-- ... --&amp;gt; &amp;lt;/form&amp;gt; Zdobądź reCAPTCHA V2 site key i kopiuj wklej go do atrybutu data-sitekey w: &amp;lt;div class=&quot;g-recaptcha&quot; tabindex=&quot;-1&quot; data-sitekey=&quot;6Lc9_xMUAAAAAFPVNhvDKb9lMXHGI4o7-zhqkTgL&quot; data-callback=&quot;recaptchaClearErr&quot;&amp;gt;&amp;lt;/div&amp;gt; Ostatni krok Użyj formularza i wyślij pierwszą wiadomość - obojętnie co. Dostaniesz maila od formspree.io, gdzie będziesz mógł potwierdzić, że chcesz otrzymywać maile ze swojej strony. I gotowe. Od tej pory wszystkie maila wysłane za pomocą tego formularza będą trafiać na twoją skrzynkę.</summary></entry><entry><title type="html">Wyszukiwarka na statycznych stronach/blogu bez backendu</title><link href="https://devcave.pl/frontend/wyszukiwarka-na-blogu-bez-backendu" rel="alternate" type="text/html" title="Wyszukiwarka na statycznych stronach/blogu bez backendu" /><published>2017-11-10T13:00:00+01:00</published><updated>2017-11-10T13:00:00+01:00</updated><id>https://devcave.pl/frontend/wyszukiwarka-na-blogu-bez-backendu</id><content type="html" xml:base="https://devcave.pl/frontend/wyszukiwarka-na-blogu-bez-backendu">&lt;p&gt;Zastanawiałem się niedawno czy możliwe jest zrobienie wyszukiwarki na statycznej stronie/blogu bez użycia technologii backendowych (chciałem mieć taką na blogu). Okazuję się, że tak - zdziwiłbym się, jeśli było by  inaczej, bo czego to nie można zrobić w IT? Pokażę jak to zrobić wykorzystując projekt na Githubie &lt;a href=&quot;https://github.com/daviddarnes/jekyll-search-js&quot;&gt;jekyll-search-js&lt;/a&gt;, który zmodyfikowałem na swoje potrzeby. Niby jest on typowo pod Jekylla, ale można wykorzystać to w innych technologiach - kluczowe jest wygenerowanie wcześniej pliku JSON z mapą naszych linków do wyszukiwania.&lt;/p&gt;

&lt;h1 id=&quot;generowanie-pliku-z-mapą-wyszukiwania&quot;&gt;Generowanie pliku z mapą wyszukiwania&lt;/h1&gt;

&lt;p&gt;Bez tego nasza wyszukiwarka się nie obejdzie. To w nim będzie się odbywało wyszukiwanie elementów. Jeśli mamy możliwość wygenerować taki plik, to będziemy mogli zrobić wyszukiwarkę. Dlatego nie jest to ograniczone do Jekylla jak nazwa wskazuje. Zapewne można to zrobić na co najmniej kilka sposobów ;)&lt;/p&gt;

&lt;p&gt;W Jekyllu jest to całkiem proste. Po ściągnięciu paczki z Githuba umieszczamy ją w zasobach projektu i otwieramy plik &lt;span class=&quot;file&quot;&gt;search.json&lt;/span&gt;. W domyślnej wersji do wyszukiwarki trafią nie tylko posty, ale również podstrony. Na blogu chciałem wyszukiwarkę tylko dla postów i zmodyfikowałem nieco kod:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;---
layout: null
sitemap: false
---

&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;capture&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
[
  &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where_exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'collection'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'collection.output != false'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;collection&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;collections&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;docs&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;docs&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where_exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'doc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'doc.sitemap != false'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;doc&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docs&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%-m&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
      {
        &quot;title&quot;: &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;,
        &quot;subtitle&quot;: &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;subtitle&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;,
        &quot;date&quot;: &quot;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%-d&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;stycznia&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;lutego&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'3'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;marca&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'4'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;kwietnia&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'5'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;maja&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'6'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;czerwca&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'7'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;lipca&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'8'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;sierpnia&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'9'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;września&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'10'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;października&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'11'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;listopada&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'12'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;grudnia&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endcase&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%Y&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;,
        &quot;url&quot;: &lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;doc.url&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
      }&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;unless&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;forloop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;,&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endunless&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
]
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endcapture&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lstrip&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ponadto, dodałem wszystkie brakujące informację o poście - podtytuł i datę, a usunąłem miedzy innymi content, bo nie chcę w wyszukiwarce pokazywać treści postu, tylko sam odnośnik. Te brzydkie “casey” po środku odpowiadają za tłumaczenie miesięcy na polski. Niestety w Jekyllu nie ma lepszego rozwiązania.&lt;/p&gt;

&lt;p&gt;Po wygenerowaniu pliku przez Jekyll wygląda to tak:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Projekt jaki-jezyk-programowania.pl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;subtitle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Wprowadzenie&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1 marca 2017&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/dajsiepoznac2017/wprowadzenie&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Przełącznik motywu, tryb nocny na blogu/stronie&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;subtitle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tryb ciemny/jasny w łatwy sposób, tylko JS.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2 listopada 2017&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/frontend/przelacznik-motywu-ciemny-na-strone&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Liceum vs technikum - co wybrać jako programista?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;subtitle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Moje spostrzeżenia i podsumowanie 4 lat w technikum&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;5 listopada 2017&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/wybory-programisty/liceum-vs-technikum-co-wybrac&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Wyszukiwarka na statycznych stronach/blogu bez backendu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;subtitle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tylko Javascript, na przykładzie bloga na Jekyllu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10 listopada 2017&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/frontend/wyszukiwarka-na-blogu-bez-backendu&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Czyli mamy plik z danymi o każdym poście na stronie, gotowy do obróbki.&lt;/p&gt;

&lt;h1 id=&quot;przeszukiwanie-i-pokazywanie-wyników&quot;&gt;Przeszukiwanie i pokazywanie wyników&lt;/h1&gt;

&lt;p&gt;Tu całą robotę zrobi za nas Javascript. W paczce są jeszcze 2 pliki &lt;span class=&quot;file&quot;&gt;search.js&lt;/span&gt; i &lt;span class=&quot;file&quot;&gt;fetch.js&lt;/span&gt;. Ten drugi odpowiada za dobieranie się do wygenerowanego pliku JSON, a całą logikę realizuje &lt;span class=&quot;file&quot;&gt;search.js&lt;/span&gt;. Tak więc, &lt;span class=&quot;file&quot;&gt;fetch.js&lt;/span&gt; zostawiamy w spokoju, a pod własne potrzeby modyfikujemy ten pierwszy. Kluczowe są dwie metody - &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;findResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;, gdzie możemy zmodyfikować sposób dopasowywania wyników i &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;displayResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;, gdzie modyfikujemy sposób prezentacji.&lt;/p&gt;

&lt;p&gt;U siebie, wyszukiwanie zmodyfikowałem tak, aby były brane pod uwagę pojedyncze słowa, a nie całe frazy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resultsList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;i class=&quot;fa fa-spinner fa-pulse fa-2x fa-fw&quot;&amp;gt;&amp;lt;/i&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' | '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*&amp;lt;--*/&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;regex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'gi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subtitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Z kolejnych słów wpisanych w wyszukiwarce budowane jest wyrażenie regularne, oddzielając je '|' - co znaczy, że będzie dopasowane dowolne słowo, a nie tak jak domyślnie - całe zdania. U mnie działa to o wiele lepiej.&lt;/p&gt;

&lt;p&gt;Warstwę prezentacji zmodyfikowałem o klasy występujące na blogu i wcześniej dodane pola:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;displayResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`
        &amp;lt;li class=&quot;result&quot;&amp;gt;
            &amp;lt;article class=&quot;result__article  article&quot;&amp;gt;
                &amp;lt;div class=&quot;post-preview&quot;&amp;gt;
                  &amp;lt;a href=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;
                    &amp;lt;h2 class=&quot;post-title&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/h2&amp;gt;
                    &amp;lt;h3 class=&quot;post-subtitle&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subtitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/h3&amp;gt;
                  &amp;lt;/a&amp;gt;
          
                  &amp;lt;p class=&quot;post-meta&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/p&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/article&amp;gt;
            
            &amp;lt;hr&amp;gt;
        &amp;lt;/li&amp;gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resultsList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;p&amp;gt;Nic nie znaleziono&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resultsList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pozostało nam dołączyć wyszukiwarkę do naszej strony, czyli:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;zdefiniować wymagane elementy w HTML&lt;/li&gt;
  &lt;li&gt;załączyć skrypty&lt;/li&gt;
  &lt;li&gt;utworzyć nowy obiekt &lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;jekyllSearch&lt;/span&gt;&lt;/code&gt; podając kolejno:
    &lt;ul&gt;
      &lt;li&gt;ścieżkę do pliku z mapą wyszukiwania, tu &lt;code class=&quot;highlight&quot;&gt;&lt;span class=&quot;s&quot;&gt;'/dist/js/search/search.json'&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;klasę inputa/pola wyszukiwarki, tu &lt;code class=&quot;highlight&quot;&gt;&lt;span class=&quot;s&quot;&gt;'search-value'&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;pojemnika na wyniki, tu &lt;code class=&quot;highlight&quot;&gt;&lt;span class=&quot;s&quot;&gt;'search-results'&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;i zainicjować go:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search-engine&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt;
    Wyszukaj po tytule/podtytule:
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search-value&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Wpisz szukaną frazę&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;search-results&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/dist/js/search/fetch.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/dist/js/search/search.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jekyllSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'/dist/js/search/search.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'.search-value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'.search-results'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A oto efekt - działa zaskakująco dobrze ;)&lt;/p&gt;

&lt;div class=&quot;search-engine&quot;&gt;
  &lt;label&gt;
    Wyszukaj po tytule/podtytule:
    &lt;input class=&quot;search-value&quot; placeholder=&quot;Wpisz szukaną frazę&quot; /&gt;
  &lt;/label&gt;

  &lt;div class=&quot;search-results&quot;&gt;&lt;/div&gt;

  &lt;script src=&quot;/dist/js/search/fetch.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;/dist/js/search/search.min.js&quot;&gt;&lt;/script&gt;

  &lt;script&gt;

    const search = new jekyllSearch(
      '/dist/js/search/search.json',
      '.search-value',
      '.search-results',
    );

    search.init();

    search.getUrlSearchQuery();

  &lt;/script&gt;
&lt;/div&gt;</content><author><name>Codeboy</name></author><category term="Frontend" /><category term="Frontend" /><category term="Jak-zrobić" /><category term="Javascript" /><category term="Jekyll" /><summary type="html">Zastanawiałem się niedawno czy możliwe jest zrobienie wyszukiwarki na statycznej stronie/blogu bez użycia technologii backendowych (chciałem mieć taką na blogu). Okazuję się, że tak - zdziwiłbym się, jeśli było by inaczej, bo czego to nie można zrobić w IT? Pokażę jak to zrobić wykorzystując projekt na Githubie jekyll-search-js, który zmodyfikowałem na swoje potrzeby. Niby jest on typowo pod Jekylla, ale można wykorzystać to w innych technologiach - kluczowe jest wygenerowanie wcześniej pliku JSON z mapą naszych linków do wyszukiwania. Generowanie pliku z mapą wyszukiwania Bez tego nasza wyszukiwarka się nie obejdzie. To w nim będzie się odbywało wyszukiwanie elementów. Jeśli mamy możliwość wygenerować taki plik, to będziemy mogli zrobić wyszukiwarkę. Dlatego nie jest to ograniczone do Jekylla jak nazwa wskazuje. Zapewne można to zrobić na co najmniej kilka sposobów ;) W Jekyllu jest to całkiem proste. Po ściągnięciu paczki z Githuba umieszczamy ją w zasobach projektu i otwieramy plik search.json. W domyślnej wersji do wyszukiwarki trafią nie tylko posty, ale również podstrony. Na blogu chciałem wyszukiwarkę tylko dla postów i zmodyfikowałem nieco kod: --- layout: null sitemap: false --- {% capture json %} [ {% assign collections = site.collections | where_exp:'collection','collection.output != false' %} {% for collection in collections %} {% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %} {% for doc in docs %} {% assign m = doc.date | date: &quot;%-m&quot; %} { &quot;title&quot;: {{ doc.title | jsonify }}, &quot;subtitle&quot;: {{ doc.subtitle | jsonify }}, &quot;date&quot;: &quot;{{ doc.date | date: &quot;%-d&quot; }} {% case m %}{% when '1' %}stycznia{% when '2' %}lutego{% when '3' %}marca{% when '4' %}kwietnia{% when '5' %}maja{% when '6' %}czerwca{% when '7' %}lipca{% when '8' %}sierpnia{% when '9' %}września{% when '10' %}października{% when '11' %}listopada{% when '12' %}grudnia{% endcase %} {{ doc.date | date: &quot;%Y&quot; }}&quot;, &quot;url&quot;: {{ site.baseurl | append: doc.url | jsonify }} }{% unless forloop.last %},{% endunless %} {% endfor %} {% endfor %} ] {% endcapture %} {{ json | lstrip }} Ponadto, dodałem wszystkie brakujące informację o poście - podtytuł i datę, a usunąłem miedzy innymi content, bo nie chcę w wyszukiwarce pokazywać treści postu, tylko sam odnośnik. Te brzydkie “casey” po środku odpowiadają za tłumaczenie miesięcy na polski. Niestety w Jekyllu nie ma lepszego rozwiązania. Po wygenerowaniu pliku przez Jekyll wygląda to tak: [ { &quot;title&quot;: &quot;Projekt jaki-jezyk-programowania.pl&quot;, &quot;subtitle&quot;: &quot;Wprowadzenie&quot;, &quot;date&quot;: &quot;1 marca 2017&quot;, &quot;url&quot;: &quot;/dajsiepoznac2017/wprowadzenie&quot; }, &amp;lt;!-- ... --&amp;gt; { &quot;title&quot;: &quot;Przełącznik motywu, tryb nocny na blogu/stronie&quot;, &quot;subtitle&quot;: &quot;Tryb ciemny/jasny w łatwy sposób, tylko JS.&quot;, &quot;date&quot;: &quot;2 listopada 2017&quot;, &quot;url&quot;: &quot;/frontend/przelacznik-motywu-ciemny-na-strone&quot; }, { &quot;title&quot;: &quot;Liceum vs technikum - co wybrać jako programista?&quot;, &quot;subtitle&quot;: &quot;Moje spostrzeżenia i podsumowanie 4 lat w technikum&quot;, &quot;date&quot;: &quot;5 listopada 2017&quot;, &quot;url&quot;: &quot;/wybory-programisty/liceum-vs-technikum-co-wybrac&quot; }, { &quot;title&quot;: &quot;Wyszukiwarka na statycznych stronach/blogu bez backendu&quot;, &quot;subtitle&quot;: &quot;Tylko Javascript, na przykładzie bloga na Jekyllu&quot;, &quot;date&quot;: &quot;10 listopada 2017&quot;, &quot;url&quot;: &quot;/frontend/wyszukiwarka-na-blogu-bez-backendu&quot; } ] Czyli mamy plik z danymi o każdym poście na stronie, gotowy do obróbki. Przeszukiwanie i pokazywanie wyników Tu całą robotę zrobi za nas Javascript. W paczce są jeszcze 2 pliki search.js i fetch.js. Ten drugi odpowiada za dobieranie się do wygenerowanego pliku JSON, a całą logikę realizuje search.js. Tak więc, fetch.js zostawiamy w spokoju, a pod własne potrzeby modyfikujemy ten pierwszy. Kluczowe są dwie metody - findResults(), gdzie możemy zmodyfikować sposób dopasowywania wyników i displayResults(), gdzie modyfikujemy sposób prezentacji. U siebie, wyszukiwanie zmodyfikowałem tak, aby były brane pod uwagę pojedyncze słowa, a nie całe frazy: async findResults() { this.resultsList.innerHTML = '&amp;lt;i class=&quot;fa fa-spinner fa-pulse fa-2x fa-fw&quot;&amp;gt;&amp;lt;/i&amp;gt;'; const data = await this.fetchedData(); return data.filter((item) =&amp;gt; { const inputValue = this.searchField.value.trim().replace(/\s/g, ' | ');/*&amp;lt;--*/ const regex = new RegExp(inputValue, 'gi'); return item.title.match(regex) || item.subtitle.match(regex); }); } Z kolejnych słów wpisanych w wyszukiwarce budowane jest wyrażenie regularne, oddzielając je '|' - co znaczy, że będzie dopasowane dowolne słowo, a nie tak jak domyślnie - całe zdania. U mnie działa to o wiele lepiej. Warstwę prezentacji zmodyfikowałem o klasy występujące na blogu i wcześniej dodane pola: async displayResults() { const results = await this.findResults(); const html = results.map(item =&amp;gt; ` &amp;lt;li class=&quot;result&quot;&amp;gt; &amp;lt;article class=&quot;result__article article&quot;&amp;gt; &amp;lt;div class=&quot;post-preview&quot;&amp;gt; &amp;lt;a href=&quot;${item.url}&quot;&amp;gt; &amp;lt;h2 class=&quot;post-title&quot;&amp;gt;${item.title}&amp;lt;/h2&amp;gt; &amp;lt;h3 class=&quot;post-subtitle&quot;&amp;gt;${item.subtitle}&amp;lt;/h3&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;p class=&quot;post-meta&quot;&amp;gt;${item.date}&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/article&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;/li&amp;gt;`).join(''); if ((results.length === 0) || (this.searchField.value === '')) { this.resultsList.innerHTML = '&amp;lt;p&amp;gt;Nic nie znaleziono&amp;lt;/p&amp;gt;'; } else { this.resultsList.innerHTML = html; } } Pozostało nam dołączyć wyszukiwarkę do naszej strony, czyli: zdefiniować wymagane elementy w HTML załączyć skrypty utworzyć nowy obiekt jekyllSearch podając kolejno: ścieżkę do pliku z mapą wyszukiwania, tu '/dist/js/search/search.json' klasę inputa/pola wyszukiwarki, tu 'search-value' pojemnika na wyniki, tu 'search-results' i zainicjować go: &amp;lt;div class=&quot;search-engine&quot;&amp;gt; &amp;lt;label&amp;gt; Wyszukaj po tytule/podtytule: &amp;lt;input class=&quot;search-value&quot; placeholder=&quot;Wpisz szukaną frazę&quot;/&amp;gt; &amp;lt;/label&amp;gt; &amp;lt;div class=&quot;search-results&quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script src=&quot;/dist/js/search/fetch.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&quot;/dist/js/search/search.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; const search = new jekyllSearch( '/dist/js/search/search.json', '.search-value', '.search-results', ); search.init(); &amp;lt;/script&amp;gt; &amp;lt;/div&amp;gt; A oto efekt - działa zaskakująco dobrze ;) Wyszukaj po tytule/podtytule:</summary></entry><entry><title type="html">Liceum vs technikum - co wybrać jako programista?</title><link href="https://devcave.pl/wybory-programisty/liceum-vs-technikum-co-wybrac" rel="alternate" type="text/html" title="Liceum vs technikum - co wybrać jako programista?" /><published>2017-11-05T11:00:00+01:00</published><updated>2017-11-05T11:00:00+01:00</updated><id>https://devcave.pl/wybory-programisty/liceum-vs-technikum-co-wybrac</id><content type="html" xml:base="https://devcave.pl/wybory-programisty/liceum-vs-technikum-co-wybrac">&lt;p&gt;Wiele osób (szczególnie w tym wpisie skupię się na przyszłych programistach), gdy stoi przed wyborem szkoły średniej zastanawia się czy wybrać liceum czy technikum. W tym poście chciałbym opisać swoje spostrzeżenia oraz podsumować opinie, na które się natknąłem. Sam stałem przed tym wyborem i dużo się zastanawiałem. Wybrałem technikum. Dziś myślę, że wybrałbym liceum. Dlaczego? Zapraszam do lektury.&lt;/p&gt;

&lt;h1 id=&quot;różnice-między-technikum-a-liceum&quot;&gt;Różnice między technikum a liceum&lt;/h1&gt;

&lt;h2 id=&quot;długość-nauki&quot;&gt;Długość nauki&lt;/h2&gt;
&lt;p&gt;Pierwszą, oczywistą różnicą jest to, że w technikum spędzimy rok dłużej.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Czy to lepiej czy gorzej to raczej indywidualna kwestia.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mi ten dodatkowy rok się przydał, &lt;strong&gt;ale&lt;/strong&gt; wynikało to z tego, że nie byłem do końca zdecydowany, co chcę robić w życiu. Dopiero pod koniec klasy 3 określiłem się, że chciałbym rozpocząć karierę programisty. Więc ten ostatni rok był w sam raz, bo dzięki niemu miałem okazję nadrobić zaległości i zrobiłem jakoś 5 razy więcej niż przez całe gimnazjum i 2 pierwsze klasy technikum razem wzięte. Po maturze, na którą poświęciłem masę czasu, miałem już solidne podstawy programowania, nawet, by zacząć pierwszą pracę, co w końcu się stało ;) Jeśli nie widziałeś to zobacz &lt;a href=&quot;https://devcave.pl/moje-do%C5%9Bwiadczenia/moja-droga-do-pierwszej-pracy&quot;&gt;moją drogę od 0 do pierwszej pracy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jednak dziś, gdy już wiem co chcę robić w życiu i zakładając, że byłoby tak wcześniej - wybrałbym liceum pod tym względem. Ten dodatkowy rok to również sporo czasu, przez który możemy się czuć nieco w tyle, porównując się ze znajomymi z liceum. Ponadto, jeśli szkoła nie oferuje nam tego, czego oczekujemy (tak jak w moim wypadku), może to być nawet czas zmarnowany.&lt;/p&gt;

&lt;p&gt;Jeśli chcesz iść na studia, jesteś nastawiony na programowanie i nie interesuje Cię nic poza tym, według mnie, nie warto iść do technikum, bo to jest rok w plecy. Nie licz na to, że technikum rozwinie Cię w tym kierunku i będziesz mógł się nazywać programistą. Liceum również tego nie zrobi, ale nie w tym rzecz. W liceum po prostu zyskujesz rok i lepiej skupisz się na maturze. Z programowaniem jest różnie.&lt;/p&gt;

&lt;h2 id=&quot;perspektywy-nauki&quot;&gt;Perspektywy nauki&lt;/h2&gt;
&lt;p&gt;Ta kwestia z kolei zależy od konkretnej szkoły, a pomiędzy miastami może się to bardzo różnić. Bywa i tak, że czasem programowania nauczymy się więcej w liceum, mimo, że - mogłoby się wydawać - to szkoła  &lt;strong&gt;techniczna&lt;/strong&gt; powinna nas bardziej do tego przyuczyć.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wszystko zależy głównie od nauczycieli, a to loteria.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;umiejętności-techniczne&quot;&gt;Umiejętności techniczne&lt;/h3&gt;

&lt;p&gt;W technikum jest więcej styczności ze sprzętem i sieciami - to pewne, ale jeśli zamierzasz być programistą to nie wiem czy to jest czynnik, który powinieneś brać pod uwagę. Można by powiedzieć, że takie rzeczy Ci się przydadzą w życiu, ale według mnie nie jest to niezbędne. Prawda jest taka, że to nie żadne “rocket science” i wszystko jest do wygooglowania w chwili, gdy potrzebne.&lt;/p&gt;

&lt;p&gt;Niektórzy nauczyciele wolą nie męczyć klasy i pozwalają nawet grać na lekcjach. Jest to bardzo na rękę uczniom, a zarazem wygodne dla nauczyciela.&lt;/p&gt;

&lt;p&gt;U mnie gierki na lekcjach to była normalka. Sam &lt;strong&gt;przegrałem&lt;/strong&gt; tak 2 pierwsze klasy. Dopiero później, gdy już byłem ukierunkowany na programowanie, wziąłem się za siebie i byłem wyjątkiem, który nie gra. Niestety w klasie nie miałem zbytnio osób zainteresowanych programowaniem.&lt;/p&gt;

&lt;h3 id=&quot;programowanie&quot;&gt;Programowanie&lt;/h3&gt;
&lt;p&gt;Czyli najważniejsza kwestia w naszym przypadku.&lt;/p&gt;

&lt;p&gt;Niestety, jeśli liczysz, że w szkołach średnich nauczysz się programowania i zyskasz perspektywy pracy to się rozczarujesz. Zazwyczaj skończysz na podstawach HTML, CSS i Javascript - czyli to, co potrzebne do zdania kwalifikacji E.14, a &lt;strong&gt;jeśli będziesz miał farta&lt;/strong&gt;, to może nawet dotkniesz jakiegoś języka OOP.&lt;/p&gt;

&lt;p&gt;Ja niestety, mimo, że poszedłem niby do “najlepszego” technikum w mieście, nie miałem wiele wspólnego z programowaniem z prawdziwego zdarzenia. O OOP to nawet nie słyszałem. A stack technologiczny kończył się na podstawach HTML, CSS i Javascript, wszystko w starych standardach i praktykach. Więc &lt;strong&gt;rankingami nie ma się co sugerować.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;U mnie to wyglądało tak, że kilka ~1h filmów M. Zelenta pokrywało cały materiał w mojej szkole :D Czyli to, co w szkole trwało 2 lata (dwa ostatnie), to mogłem się nauczyć podczas kilku sesji ze wspomnianymi kursami. Ba, nawet o wiele więcej ;)&lt;/p&gt;

&lt;p&gt;To dziwne (nie jestem pewny czy jest to reguła), ale z tego, co zaobserwowałem w wypowiedziach, to w liceum bywa więcej kontaktu z programowaniem - oczywiście na odpowiednim profilu. Polecam popytać osób, które już się uczą jak to wygląda w konkretnym liceum.&lt;/p&gt;

&lt;p&gt;Tak czy inaczej, &lt;strong&gt;programowania będziesz musiał uczyć się na własną rękę&lt;/strong&gt;, bez względu na szkołę średnią. &lt;strong&gt;Ani technikum, ani liceum nie zrobi tego za Ciebie.&lt;/strong&gt; Ba, nawet na studia nie licz. Z wiedzą wyniesioną tylko ze szkoły nie rozwiniesz skrzydeł.&lt;/p&gt;

&lt;h3 id=&quot;przedmioty-maturalne&quot;&gt;Przedmioty maturalne&lt;/h3&gt;
&lt;p&gt;To jak najbardziej indywidualna kwestia szkoły, jednak jest tendencja, że w liceach matura wypada lepiej. Więcej godzin na te przedmioty i bla bla. Ale znowu, &lt;strong&gt;jeśli chcesz osiągnąć dobry wynik to 90% twojego sukcesu zależy od twojego wkładu.&lt;/strong&gt; Wiadomo, jedna szkoła bardziej Ci w tym pomoże, druga mniej. Loteria.&lt;/p&gt;

&lt;p&gt;Nie chcę was tak negatywnie nastawiać do szkoły, ale w moim przypadku było tak, że w 4 klasie &lt;strong&gt;nie chodziłem do szkoły, po to by się więcej nauczyć&lt;/strong&gt; - ironia prawda? Po prostu miałem masę przedmiotów, na których mało co się robiło i jedyne co czułem to, że marnuję czas. W ostatnich miesiącach do szkoły to przychodziłem tylko na matmę - jedyny przedmiot, z którego coś na prawdę wynosiłem. W 4 klasie miałem jakieś 51% frekwencji :D. Wolałem nie iść do szkoły, w tym czasie nauczyć się co zaplanowałem i mieć resztę dnia wolną, niż iść do szkoły, zmarnować 3/4 dnia i uczyć się po nocach. Mówię tu głównie o przygotowaniach do matury.&lt;/p&gt;

&lt;p&gt;Miałem to szczęście, że miałem wyrozumiałego wychowawcę (nauczyciel matematyki) oraz rodziców, którzy po części mnie rozumieli i mi na to przyzwalali. Koniec końców i tak skończyłem z paskiem i wzorowym zachowaniem :D&lt;/p&gt;

&lt;p&gt;Podsumowując, jeśli już masz określony cel i jesteś nastawiony na bycie programistą, wybrałbym liceum - większa szansa na programowanie oraz nie jesteśmy rok w plecy - tym bardziej jeśli planujemy studia. Z kolei, jeśli nigdzie Ci się nie spieszy i chciałbyś podotykać trochę komputerów - wybierz technikum. Z punktu widzenia programowania nie ma różnicy gdzie pójdziesz, wszystko zależy od twojego wkładu.&lt;/p&gt;

&lt;h2 id=&quot;kwalifikacje-zawodowe&quot;&gt;Kwalifikacje zawodowe&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Przynajmniej po technikum będziesz miał zawód&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Heh.&lt;/strong&gt; No to chyba możemy przejść do następnej kwestii. Nie no, należą się słowa uzasadnienia takiej reakcji dla nie wtajemniczonych.&lt;/p&gt;

&lt;p&gt;Ale szczerze? &lt;strong&gt;Dla mnie to nic nie znaczący świstek, który nie popiera żadnych umiejętności.&lt;/strong&gt; Zdałem te kwalifikacje i tak gdzieś leżą i się kurzą. Nawet w CV ich nie załączam. Dlaczego?&lt;/p&gt;

&lt;p&gt;A no dlatego, że osoby, które praktycznie nic nie potrafią mogą z łatwością je zdać. Co jeszcze śmieszniejsze, wszystkie egzaminy możemy bez trudu, nawet kilka dni wcześniej przejrzeć, albo przynajmniej poznać większość pytań, które dostaniemy. Facebookowe grupy dają radę ;)&lt;/p&gt;

&lt;p&gt;Nic nie umiejąc, wystarczy przyjść chwilę wcześniej na egzamin, wystukać pytania na pamięć i gotowe. Naprawdę się dziwię jak to się dzieje, że ludzie tego nie zdają. Chyba nawet na facebooka nie chciało im się wejść. Tak było za mojej kadencji, ale może to się niedługo zmieni.&lt;/p&gt;

&lt;p&gt;Łatwiej jest dostać pracę po technikum z kwalifikacjami zawodowymi? Poza programowaniem - pewnie tak. Tylko wydaję mi się, że na łatwiejszym dostaniu się skończy, bo twoje umiejętności zostaną szybko zweryfikowane i wtedy papierek już nie pomoże. &lt;strong&gt;Dla programisty są bezwartościowe.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;praktyki&quot;&gt;Praktyki&lt;/h2&gt;

&lt;p&gt;W technikum mamy miesięczne praktyki i jest to jedyna rzecz, którą dobrze wspominam ze swojej szkoły. To dlatego, że miałem okazję wyjechać do Anglii (praktycznie za free) na miesiąc. Było to przyjemne doświadczenie, jednak nie związane z programowaniem. Z tego powodu to również nie przydało mi się to do budowania CV. Pewnie napiszę kiedyś o tym osobny post i tu podlinkuję.  I oto on - &lt;a href=&quot;https://devcave.pl/moje-do%C5%9Bwiadczenia/praktyki-zawodowe-w-technikum-informatycznym&quot;&gt;wpis&lt;/a&gt; ;)&lt;/p&gt;

&lt;p&gt;W skrócie, jeśli uda Ci się trafić na coś fajnego (co nie jest łatwe) to będzie to przyjemnie doświadczenie. W przeciwnym wypadku będziesz podawał papier do drukarki i zapisywał sobie odbyte godziny praktyk (może się tak trafić nawet na projekcie zagranicznym).&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;W tym wpisie irytująco często padło słowo &lt;strong&gt;loteria&lt;/strong&gt;. I tak, to prawda. To co dostaniemy od szkoły, to na jakich ludzi trafimy i jak nauczyciele będą do nas podchodzić to prawdziwa loteria. Dlatego &lt;strong&gt;polecam każdemu skontaktować się z ludźmi, którzy są lub byli w konkretnej szkole&lt;/strong&gt;. Ja tego nie zrobiłem i teraz żałuję, sugerowałem się tylko rankingami, które nic nie znaczą.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tylko osoby z podobnym nastawieniem co ty, będące w szkole, która zamierzasz wybrać, dadzą Ci najlepszą opinię jaką możesz dostać.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Codeboy</name></author><category term="Wybory-programisty" /><category term="Wybory-programisty" /><category term="Moje-doświadczenia" /><summary type="html">Wiele osób (szczególnie w tym wpisie skupię się na przyszłych programistach), gdy stoi przed wyborem szkoły średniej zastanawia się czy wybrać liceum czy technikum. W tym poście chciałbym opisać swoje spostrzeżenia oraz podsumować opinie, na które się natknąłem. Sam stałem przed tym wyborem i dużo się zastanawiałem. Wybrałem technikum. Dziś myślę, że wybrałbym liceum. Dlaczego? Zapraszam do lektury. Różnice między technikum a liceum Długość nauki Pierwszą, oczywistą różnicą jest to, że w technikum spędzimy rok dłużej. Czy to lepiej czy gorzej to raczej indywidualna kwestia. Mi ten dodatkowy rok się przydał, ale wynikało to z tego, że nie byłem do końca zdecydowany, co chcę robić w życiu. Dopiero pod koniec klasy 3 określiłem się, że chciałbym rozpocząć karierę programisty. Więc ten ostatni rok był w sam raz, bo dzięki niemu miałem okazję nadrobić zaległości i zrobiłem jakoś 5 razy więcej niż przez całe gimnazjum i 2 pierwsze klasy technikum razem wzięte. Po maturze, na którą poświęciłem masę czasu, miałem już solidne podstawy programowania, nawet, by zacząć pierwszą pracę, co w końcu się stało ;) Jeśli nie widziałeś to zobacz moją drogę od 0 do pierwszej pracy Jednak dziś, gdy już wiem co chcę robić w życiu i zakładając, że byłoby tak wcześniej - wybrałbym liceum pod tym względem. Ten dodatkowy rok to również sporo czasu, przez który możemy się czuć nieco w tyle, porównując się ze znajomymi z liceum. Ponadto, jeśli szkoła nie oferuje nam tego, czego oczekujemy (tak jak w moim wypadku), może to być nawet czas zmarnowany. Jeśli chcesz iść na studia, jesteś nastawiony na programowanie i nie interesuje Cię nic poza tym, według mnie, nie warto iść do technikum, bo to jest rok w plecy. Nie licz na to, że technikum rozwinie Cię w tym kierunku i będziesz mógł się nazywać programistą. Liceum również tego nie zrobi, ale nie w tym rzecz. W liceum po prostu zyskujesz rok i lepiej skupisz się na maturze. Z programowaniem jest różnie. Perspektywy nauki Ta kwestia z kolei zależy od konkretnej szkoły, a pomiędzy miastami może się to bardzo różnić. Bywa i tak, że czasem programowania nauczymy się więcej w liceum, mimo, że - mogłoby się wydawać - to szkoła techniczna powinna nas bardziej do tego przyuczyć. Wszystko zależy głównie od nauczycieli, a to loteria. Umiejętności techniczne W technikum jest więcej styczności ze sprzętem i sieciami - to pewne, ale jeśli zamierzasz być programistą to nie wiem czy to jest czynnik, który powinieneś brać pod uwagę. Można by powiedzieć, że takie rzeczy Ci się przydadzą w życiu, ale według mnie nie jest to niezbędne. Prawda jest taka, że to nie żadne “rocket science” i wszystko jest do wygooglowania w chwili, gdy potrzebne. Niektórzy nauczyciele wolą nie męczyć klasy i pozwalają nawet grać na lekcjach. Jest to bardzo na rękę uczniom, a zarazem wygodne dla nauczyciela. U mnie gierki na lekcjach to była normalka. Sam przegrałem tak 2 pierwsze klasy. Dopiero później, gdy już byłem ukierunkowany na programowanie, wziąłem się za siebie i byłem wyjątkiem, który nie gra. Niestety w klasie nie miałem zbytnio osób zainteresowanych programowaniem. Programowanie Czyli najważniejsza kwestia w naszym przypadku. Niestety, jeśli liczysz, że w szkołach średnich nauczysz się programowania i zyskasz perspektywy pracy to się rozczarujesz. Zazwyczaj skończysz na podstawach HTML, CSS i Javascript - czyli to, co potrzebne do zdania kwalifikacji E.14, a jeśli będziesz miał farta, to może nawet dotkniesz jakiegoś języka OOP. Ja niestety, mimo, że poszedłem niby do “najlepszego” technikum w mieście, nie miałem wiele wspólnego z programowaniem z prawdziwego zdarzenia. O OOP to nawet nie słyszałem. A stack technologiczny kończył się na podstawach HTML, CSS i Javascript, wszystko w starych standardach i praktykach. Więc rankingami nie ma się co sugerować. U mnie to wyglądało tak, że kilka ~1h filmów M. Zelenta pokrywało cały materiał w mojej szkole :D Czyli to, co w szkole trwało 2 lata (dwa ostatnie), to mogłem się nauczyć podczas kilku sesji ze wspomnianymi kursami. Ba, nawet o wiele więcej ;) To dziwne (nie jestem pewny czy jest to reguła), ale z tego, co zaobserwowałem w wypowiedziach, to w liceum bywa więcej kontaktu z programowaniem - oczywiście na odpowiednim profilu. Polecam popytać osób, które już się uczą jak to wygląda w konkretnym liceum. Tak czy inaczej, programowania będziesz musiał uczyć się na własną rękę, bez względu na szkołę średnią. Ani technikum, ani liceum nie zrobi tego za Ciebie. Ba, nawet na studia nie licz. Z wiedzą wyniesioną tylko ze szkoły nie rozwiniesz skrzydeł. Przedmioty maturalne To jak najbardziej indywidualna kwestia szkoły, jednak jest tendencja, że w liceach matura wypada lepiej. Więcej godzin na te przedmioty i bla bla. Ale znowu, jeśli chcesz osiągnąć dobry wynik to 90% twojego sukcesu zależy od twojego wkładu. Wiadomo, jedna szkoła bardziej Ci w tym pomoże, druga mniej. Loteria. Nie chcę was tak negatywnie nastawiać do szkoły, ale w moim przypadku było tak, że w 4 klasie nie chodziłem do szkoły, po to by się więcej nauczyć - ironia prawda? Po prostu miałem masę przedmiotów, na których mało co się robiło i jedyne co czułem to, że marnuję czas. W ostatnich miesiącach do szkoły to przychodziłem tylko na matmę - jedyny przedmiot, z którego coś na prawdę wynosiłem. W 4 klasie miałem jakieś 51% frekwencji :D. Wolałem nie iść do szkoły, w tym czasie nauczyć się co zaplanowałem i mieć resztę dnia wolną, niż iść do szkoły, zmarnować 3/4 dnia i uczyć się po nocach. Mówię tu głównie o przygotowaniach do matury. Miałem to szczęście, że miałem wyrozumiałego wychowawcę (nauczyciel matematyki) oraz rodziców, którzy po części mnie rozumieli i mi na to przyzwalali. Koniec końców i tak skończyłem z paskiem i wzorowym zachowaniem :D Podsumowując, jeśli już masz określony cel i jesteś nastawiony na bycie programistą, wybrałbym liceum - większa szansa na programowanie oraz nie jesteśmy rok w plecy - tym bardziej jeśli planujemy studia. Z kolei, jeśli nigdzie Ci się nie spieszy i chciałbyś podotykać trochę komputerów - wybierz technikum. Z punktu widzenia programowania nie ma różnicy gdzie pójdziesz, wszystko zależy od twojego wkładu. Kwalifikacje zawodowe Przynajmniej po technikum będziesz miał zawód Heh. No to chyba możemy przejść do następnej kwestii. Nie no, należą się słowa uzasadnienia takiej reakcji dla nie wtajemniczonych. Ale szczerze? Dla mnie to nic nie znaczący świstek, który nie popiera żadnych umiejętności. Zdałem te kwalifikacje i tak gdzieś leżą i się kurzą. Nawet w CV ich nie załączam. Dlaczego? A no dlatego, że osoby, które praktycznie nic nie potrafią mogą z łatwością je zdać. Co jeszcze śmieszniejsze, wszystkie egzaminy możemy bez trudu, nawet kilka dni wcześniej przejrzeć, albo przynajmniej poznać większość pytań, które dostaniemy. Facebookowe grupy dają radę ;) Nic nie umiejąc, wystarczy przyjść chwilę wcześniej na egzamin, wystukać pytania na pamięć i gotowe. Naprawdę się dziwię jak to się dzieje, że ludzie tego nie zdają. Chyba nawet na facebooka nie chciało im się wejść. Tak było za mojej kadencji, ale może to się niedługo zmieni. Łatwiej jest dostać pracę po technikum z kwalifikacjami zawodowymi? Poza programowaniem - pewnie tak. Tylko wydaję mi się, że na łatwiejszym dostaniu się skończy, bo twoje umiejętności zostaną szybko zweryfikowane i wtedy papierek już nie pomoże. Dla programisty są bezwartościowe. Praktyki W technikum mamy miesięczne praktyki i jest to jedyna rzecz, którą dobrze wspominam ze swojej szkoły. To dlatego, że miałem okazję wyjechać do Anglii (praktycznie za free) na miesiąc. Było to przyjemne doświadczenie, jednak nie związane z programowaniem. Z tego powodu to również nie przydało mi się to do budowania CV. Pewnie napiszę kiedyś o tym osobny post i tu podlinkuję. I oto on - wpis ;) W skrócie, jeśli uda Ci się trafić na coś fajnego (co nie jest łatwe) to będzie to przyjemnie doświadczenie. W przeciwnym wypadku będziesz podawał papier do drukarki i zapisywał sobie odbyte godziny praktyk (może się tak trafić nawet na projekcie zagranicznym). Podsumowanie W tym wpisie irytująco często padło słowo loteria. I tak, to prawda. To co dostaniemy od szkoły, to na jakich ludzi trafimy i jak nauczyciele będą do nas podchodzić to prawdziwa loteria. Dlatego polecam każdemu skontaktować się z ludźmi, którzy są lub byli w konkretnej szkole. Ja tego nie zrobiłem i teraz żałuję, sugerowałem się tylko rankingami, które nic nie znaczą. Tylko osoby z podobnym nastawieniem co ty, będące w szkole, która zamierzasz wybrać, dadzą Ci najlepszą opinię jaką możesz dostać.</summary></entry><entry><title type="html">Przełącznik motywu, tryb nocny na blogu/stronie</title><link href="https://devcave.pl/frontend/przelacznik-motywu-ciemny-na-strone" rel="alternate" type="text/html" title="Przełącznik motywu, tryb nocny na blogu/stronie" /><published>2017-11-02T13:00:00+01:00</published><updated>2017-11-02T13:00:00+01:00</updated><id>https://devcave.pl/frontend/przelacznik-motywu-ciemny-na-strone</id><content type="html" xml:base="https://devcave.pl/frontend/przelacznik-motywu-ciemny-na-strone">&lt;p&gt;Zawszę doceniam, gdy na stronach/blogach mamy możliwość zmiany motywu na ciemny. Jest to świetna opcja do czytania lub do przeglądania strony bez światła. Dlatego też zaimplementowałem taką funkcję na swoim blogu (w prawym górnym rogu w navbarze).&lt;/p&gt;

&lt;p&gt;Pokażę jak to wykonałem - relatywnie szybko i bezboleśnie, na przykładzie tego bloga ;)&lt;/p&gt;

&lt;h1 id=&quot;przygotowywujemy-przycisk&quot;&gt;Przygotowywujemy przycisk&lt;/h1&gt;

&lt;p&gt;To kwestia gustu. Tutaj jest w navbarze - na liście opcji, z tooltipem i ikonami fontawsome:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;collapse navbar-collapse&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bs-example-navbar-collapse-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav navbar-nav navbar-right&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!--  ...  --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dark-mode-btn nav-el&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-toggle=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tooltip&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-placement=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bottom&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Zmień motyw&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fa fa-sun-o&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-hidden=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;/&lt;span class=&quot;nt&quot;&gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fa fa-moon-o&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;aria-hidden=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;obsługujemy-zmianę-i-zapamiętujemy-wybór-w-localstorage&quot;&gt;Obsługujemy zmianę i zapamiętujemy wybór w LocalStorage&lt;/h1&gt;

&lt;p&gt;Zaimplementowałem to w ten sposób, że po kliknięciu przycisku przełączany jest motyw (u mnie dodawana jest klasa “dark-mode” do body) oraz zapamiętywany jest nasz wybór w &lt;a href=&quot;https://developer.mozilla.org/pl/docs/Web/API/Window/localStorage&quot;&gt;localStorage&lt;/a&gt; - czyli w pamięci cache przeglądarki dopóki jej nie wyczyścimy.&lt;/p&gt;

&lt;p&gt;Dałoby się to zrobić za pomocą ciasteczek, ale wykorzystanie localStorage jest bardziej odpowiednie, gdyż nie wysyłamy nic w nagłówku HTTP (nie marnujemy łącza :D) i nie wygaśnie nam to po jakimś czasie. Wszystkie dzieje się w przeglądarce użytkownika. Poza tym, ciasteczka są przeznaczone do odczytywania po stronie serwera.&lt;/p&gt;

&lt;p&gt;Tak więc dodajemy obsługę kliknięcia:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.dark-mode-btn'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;darkMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dark-mode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;localStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dark-mode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;darkMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlight language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt; odznacza przycisk po kliknięciu, bez tego byłby aktywny.&lt;/p&gt;

&lt;p&gt;Poza tym, przy otwieraniu strony powinien zostać wczytany zapamiętany wybór i zmieniony motyw jeśli jest taka potrzeba:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dark-mode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dark-mode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;U mnie klasa CSS zmieniającą motyw jest aż tak prosta:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.dark-mode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#2a2a2a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#e2e2e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Wiadomo, jęśli masz więcej elementów, którym będziesz chciał zmienić wygląd po przełączeniu motywu, tym więcej modyfikacji CSS będziesz musiał dokonać. Jeśli chcesz, żeby inne elementy też zmieniały swój wygląd, to będziesz musiał stworzyć selector w CSS, który dziedziczy po &lt;code class=&quot;highlight&quot;&gt;&lt;span class=&quot;na&quot;&gt;.dark-mode&lt;/span&gt;&lt;/code&gt;, czyli np. jeśli masz element div z klasą “whatever”, jego wersję dla ciemnego motywu zdefiniujesz tak:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.dark-mode&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.whatever&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;W&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;rezultacie&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;te&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;warto&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ś&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ci&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ę&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ą&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;si&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ę&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;za&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;łą&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;cza&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ć&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tylko&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;wtedy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;kiedy&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ę&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;dzie&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;mia&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ł&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;klas&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ę&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;highlight&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;na&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.dark-mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;dostosowywanie-strony-do-zmian&quot;&gt;Dostosowywanie strony do zmian&lt;/h1&gt;

&lt;p&gt;Pozostało nam dostosować bloga/stronę do takiej zmiany i w niektórych elementach CSS pozmieniać wartości &lt;code class=&quot;highlight&quot;&gt;background&lt;/code&gt; i &lt;code class=&quot;highlight&quot;&gt;color&lt;/code&gt; na &lt;code class=&quot;highlight&quot;&gt;&lt;span class=&quot;m&quot;&gt;inherit&lt;/span&gt;&lt;/code&gt;, aby kolory były dziedziczone z klasy &lt;code class=&quot;highlight&quot;&gt;&lt;span class=&quot;na&quot;&gt;.dark-mode&lt;/span&gt;&lt;/code&gt;. Poza tym, prawdopodobnie czeka nas kilka zmian kolorystycznych, aby dopasować się do dwóch trybów.&lt;/p&gt;

&lt;p class=&quot;note&quot;&gt;
    Zdaję sobię, że nie u każdego będzie to takie banalne i czasem wasza strona może wymagać głębszej modyfikacji css, aby nasza strona wyglądała dobrze po zmianie motywu. Dlatego dobrze jest dobierać kolory, które wyglądają ładnie w obu motywach. Wtedy pójdzie to tak szybko jak u mnie ;)
&lt;/p&gt;

&lt;p class=&quot;idea&quot;&gt;
Jeśli używasz Disqus na swojej stronie, to przy zmianie motywu sekcja komentarzy może nie wyglądać poprawnie. Jeśli masz zaznaczoną opcję, aby disqus dostosowywał wygląd automatycznie, możesz wymusić jego przeładowanie po zmianie motywu, aby ponownie się dopasowałAC. Wystarczy dodać taką linijkę tam gdzie obsługujemy kliknięcie:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;DISQUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jest to w try catch, ponieważ zakładam, że nie na każdej stronie masz sekcję komentarzy ;)&lt;/p&gt;</content><author><name>Codeboy</name></author><category term="Frontend" /><category term="Frontend" /><category term="Jak-zrobić" /><category term="Javascript" /><summary type="html">Zawszę doceniam, gdy na stronach/blogach mamy możliwość zmiany motywu na ciemny. Jest to świetna opcja do czytania lub do przeglądania strony bez światła. Dlatego też zaimplementowałem taką funkcję na swoim blogu (w prawym górnym rogu w navbarze). Pokażę jak to wykonałem - relatywnie szybko i bezboleśnie, na przykładzie tego bloga ;) Przygotowywujemy przycisk To kwestia gustu. Tutaj jest w navbarze - na liście opcji, z tooltipem i ikonami fontawsome: &amp;lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&amp;gt; &amp;lt;ul class=&quot;nav navbar-nav navbar-right&quot;&amp;gt; &amp;lt;!-- ... --&amp;gt; &amp;lt;li&amp;gt; &amp;lt;button class=&quot;dark-mode-btn nav-el&quot; data-toggle=&quot;tooltip&quot; data-placement=&quot;bottom&quot; title=&quot;Zmień motyw&quot;&amp;gt; &amp;lt;i class=&quot;fa fa-sun-o&quot; aria-hidden=&quot;true&quot;&amp;gt;&amp;lt;/i&amp;gt;/&amp;lt;i class=&quot;fa fa-moon-o&quot; aria-hidden=&quot;true&quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/button&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; Obsługujemy zmianę i zapamiętujemy wybór w LocalStorage Zaimplementowałem to w ten sposób, że po kliknięciu przycisku przełączany jest motyw (u mnie dodawana jest klasa “dark-mode” do body) oraz zapamiętywany jest nasz wybór w localStorage - czyli w pamięci cache przeglądarki dopóki jej nie wyczyścimy. Dałoby się to zrobić za pomocą ciasteczek, ale wykorzystanie localStorage jest bardziej odpowiednie, gdyż nie wysyłamy nic w nagłówku HTTP (nie marnujemy łącza :D) i nie wygaśnie nam to po jakimś czasie. Wszystkie dzieje się w przeglądarce użytkownika. Poza tym, ciasteczka są przeznaczone do odczytywania po stronie serwera. Tak więc dodajemy obsługę kliknięcia: document.querySelector('.dark-mode-btn').addEventListener('click', (e) =&amp;gt; { const darkMode = document.body.classList.toggle('dark-mode'); e.target.blur(); localStorage.setItem('dark-mode', darkMode); }); e.target.blur(); odznacza przycisk po kliknięciu, bez tego byłby aktywny. Poza tym, przy otwieraniu strony powinien zostać wczytany zapamiętany wybór i zmieniony motyw jeśli jest taka potrzeba: if (JSON.parse(localStorage.getItem('dark-mode'))) { document.body.classList.add('dark-mode'); } U mnie klasa CSS zmieniającą motyw jest aż tak prosta: .dark-mode { background: #2a2a2a; color: #e2e2e2; } Wiadomo, jęśli masz więcej elementów, którym będziesz chciał zmienić wygląd po przełączeniu motywu, tym więcej modyfikacji CSS będziesz musiał dokonać. Jeśli chcesz, żeby inne elementy też zmieniały swój wygląd, to będziesz musiał stworzyć selector w CSS, który dziedziczy po .dark-mode, czyli np. jeśli masz element div z klasą “whatever”, jego wersję dla ciemnego motywu zdefiniujesz tak: .dark-mode .whatever { key: property; key: property; key: property; } W rezultacie te wartości będą się załączać tylko wtedy, kiedy body będzie miało klasę &amp;lt;code class=&quot;highlight&quot;&amp;gt;&amp;lt;span class=&quot;na&quot;&amp;gt;.dark-mode&amp;lt;/span&amp;gt;&amp;lt;/code&amp;gt;. Dostosowywanie strony do zmian Pozostało nam dostosować bloga/stronę do takiej zmiany i w niektórych elementach CSS pozmieniać wartości background i color na inherit, aby kolory były dziedziczone z klasy .dark-mode. Poza tym, prawdopodobnie czeka nas kilka zmian kolorystycznych, aby dopasować się do dwóch trybów. Zdaję sobię, że nie u każdego będzie to takie banalne i czasem wasza strona może wymagać głębszej modyfikacji css, aby nasza strona wyglądała dobrze po zmianie motywu. Dlatego dobrze jest dobierać kolory, które wyglądają ładnie w obu motywach. Wtedy pójdzie to tak szybko jak u mnie ;) Jeśli używasz Disqus na swojej stronie, to przy zmianie motywu sekcja komentarzy może nie wyglądać poprawnie. Jeśli masz zaznaczoną opcję, aby disqus dostosowywał wygląd automatycznie, możesz wymusić jego przeładowanie po zmianie motywu, aby ponownie się dopasowałAC. Wystarczy dodać taką linijkę tam gdzie obsługujemy kliknięcie: try { DISQUS.reset({ reload: true }); } catch (e) {} Jest to w try catch, ponieważ zakładam, że nie na każdej stronie masz sekcję komentarzy ;)</summary></entry><entry><title type="html">Moja droga do pierwszej pracy</title><link href="https://devcave.pl/moje-do%C5%9Bwiadczenia/moja-droga-do-pierwszej-pracy" rel="alternate" type="text/html" title="Moja droga do pierwszej pracy" /><published>2017-10-29T13:00:00+01:00</published><updated>2017-10-29T13:00:00+01:00</updated><id>https://devcave.pl/moje-do%C5%9Bwiadczenia/moja-droga-do-pierwszej-pracy</id><content type="html" xml:base="https://devcave.pl/moje-do%C5%9Bwiadczenia/moja-droga-do-pierwszej-pracy">&lt;p&gt;Minęło sporo czasu od ostatniego postu. Przez ten okres całkowicie poświęciłem się nauce Javy i jej technologii, aby jak najszybciej mieć szansę na dostanie pracy. I udało się! Chciałem się tym tutaj podzielić i przedstawić całą drogę od początku do końca.&lt;/p&gt;

&lt;h1 id=&quot;jak-zaczynałem&quot;&gt;Jak zaczynałem&lt;/h1&gt;

&lt;p&gt;Programowania zacząłem się uczyć (tak bardziej na poważnie, z myślą bycia programistą) gdzieś na początku 4 klasy technikum informatycznego (2016 rok). Wcześniej nie byłem jeszcze pewien, co chciałbym robić w przyszłości. Jak pewnie w większości techników, programowanie opierało się na programowaniu webowym, czyli wokół HTML, CSS i Javascript. Były to jednak takie podstawy, że praktycznie nie było możliwe napisanie czegoś konkretnego z taką wiedzą. O OOP to nawet nie słyszałem.  Dlatego zacząłem interesować się tym tematem i uczyć się na własną rękę. Wtedy trafiłem na kursy M. Zelenta, które były dla mnie po prostu idealne. Ponadto, dzięki nim dostałem tyle motywacji i tak mnie zachęciły do działania, że o niczym innym już nie myślałem i to właśnie z programowaniem chciałem wiązać przyszłość (trwa to do dziś). Jednak po jakimś czasie okazało się, że wiedza wyniesiona z technikum (przynajmniej w moim wypadku) oraz częściowo z kursów okazała się stertą złych praktyk, o czym szybko się przekonałem dzięki zakładaniu wątków na &lt;a href=&quot;https://forum.pasja-informatyki.pl/&quot;&gt;Forum Pasja Informatyki&lt;/a&gt; z moimi projektami - pisanymi w celu nauki technologii webowych. Dzięki wielu osobom z forum, m.in. &lt;a href=&quot;https://forum.pasja-informatyki.pl/user/Krzycho92&quot;&gt;Krzycho92&lt;/a&gt;, &lt;a href=&quot;https://forum.pasja-informatyki.pl/user/argeento&quot;&gt;argeento&lt;/a&gt; oraz później &lt;a href=&quot;https://forum.pasja-informatyki.pl/user/Comandeer&quot;&gt;Comandeer&lt;/a&gt; i &lt;a href=&quot;https://forum.pasja-informatyki.pl/user/Ivan&quot;&gt;Ivan&lt;/a&gt;, wiele się nauczyłem i po części feedback z forum motywował mnie do dalszej pracy.&lt;/p&gt;

&lt;h1 id=&quot;moje-projekty&quot;&gt;Moje projekty&lt;/h1&gt;
&lt;p&gt;Zrobiłem &lt;a href=&quot;/moje-projekty/&quot;&gt;listę moich projektów&lt;/a&gt;, żeby mieć się z czego pośmiać za parę lat, ale też z myślą, że ktoś zobaczy jak wygląda mniej więcej progres projektów i na jakim etapie można się starać o pierwszą pracę.&lt;/p&gt;

&lt;p&gt;I tak na początku pomijając jakieś śmieszne stronki na ocenę do szkoły, moim pierwszym projektem była gra &lt;a href=&quot;/moje-projekty/#kolko-krzyzyk&quot;&gt;kółko i krzyżyk&lt;/a&gt; zrobiona w HTML, CSS i Javascript. Miałem tu też pierwszą styczność z Gitem. Później w tych samych technologiach razem z kolegą zrobiliśmy kopię &lt;a href=&quot;/moje-projekty#game-of-life&quot;&gt;Game of Life&lt;/a&gt; Johna Conwaya (Ciężko to nazwać grą :D).&lt;/p&gt;

&lt;p&gt;Gdzieś w między czasie wygrałem konkurs świąteczny (100zł na książkę :D) zajmując 1 miejsce z 72 głosami (drugie miało 35), którego celem było wykonanie animacji znaków ASCII w dowolnej technologii zorganizowany przez &lt;a href=&quot;https://forum.pasja-informatyki.pl/&quot;&gt;Forum Pasja Informatyki&lt;/a&gt;. &lt;a href=&quot;/moje-projekty/#swieta-asci-art&quot;&gt;Animacja&lt;/a&gt; w HTML, CSS, Javascript wyglądała tak:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/swieta-asci-art.gif&quot; alt=&quot;Animacja świąteczna&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dało mi to sporo satysfakcji :D&lt;/p&gt;

&lt;p&gt;Po drodze, na potrzeby szkolne, wykonaliśmy z kolegą &lt;a href=&quot;/moje-projekty#zwierciadła-i-soczewki&quot;&gt;aplikację webową&lt;/a&gt; symulującą szkolne rysowanie obrazów w zwierciadłach i soczewkach.&lt;/p&gt;

&lt;p&gt;Następnym moim &lt;a href=&quot;/moje-projekty#jaki-jezyk-programowania&quot;&gt;projektem&lt;/a&gt;, już nieco większym, który rozwijam do dziś, była strona &lt;a href=&quot;https://jaki-jezyk-programowania.pl/&quot;&gt;jaki-jezyk-programowania.pl&lt;/a&gt;. Prace wystartowały w styczniu 2017 roku. To tu, podczas budowania strony, nauczyłem się najwięcej z technologii webowych. Poznałem Bootstrapa i jQuery. Zacząłem używać ES6 i buildować projekt z pomocą webpacka. O jakość kodu dbał mi ESLint. Nie mówiąc już ile pochłonąłem wiedzy teoretycznej na temat różnych technologii. Jest to projekt na który poświeciłem największą ilość czasu.&lt;/p&gt;

&lt;p&gt;Zacząłem pisać tego bloga dzięki inicjatywie DajSiePoznac2017 z wykorzystaniem narzędzia Jekyll - opisywałem to &lt;a href=&quot;https://devcave.pl/dajsiepoznac2017/instalacja-jekyll&quot;&gt;wcześniej&lt;/a&gt; na blogu. Był to nieco burzliwy okres, gdyż częstotliwość postów była 2 na tydzień, w między czasie rozwijałem &lt;a href=&quot;https://jaki-jezyk-programowania.pl/&quot;&gt;jaki-jezyk-programowania.pl&lt;/a&gt;. Na dodatek byłem niedługo przed maturą i poświęcałem masę czasu na naukę do rozszerzeń - matematyki i informatyki, przez to bardzo mało czasu zostawało mi na programowanie. Dosłownie katowałem się tym, a koniec końców nie udało mi się uzyskać satysfakcjonującego wyniku z matury - o tym później. Co do blogowania to było to miłe doświadczenie i chyba do tego wracam ;)&lt;/p&gt;

&lt;p&gt;Jako odskocznia od typowych projektów zacząłem tworzyć &lt;a href=&quot;/moje-projekty#remake-tank1990&quot;&gt;remake&lt;/a&gt; retro gry Battle City/Tank 1990 w Phaserze. Pewnie każdy ją kojarzy z dzieciństwa. Gra nie jest dokończona, zatrzymałem się na podstawowych elementach mechaniki gry (bez leveli, różnych czołgów i zbierania ulepszeń) by zająć się w pełnym wymiarze tym czym zacząłem się uczyć w między czasie - Javą, jej technologiami i OOP. Tworzenie gry było ciekawym doświadczeniem, myślę, że kiedyś do niej wrócę lub zabiorę się za jakąś nową.&lt;/p&gt;

&lt;p&gt;Tak więc, moim kolejnym celem była Java. W tej technologii chciałem pracować i miał to być mój główny język programowania.&lt;/p&gt;

&lt;p&gt;Zbliżały się wakacje, więc pomyślałem, że może znajdę jakieś praktyki żeby nabrać trochę doświadczenia. Niestety, mieszkam w Kielcach, gdzie jest bardzo mało ofert pracy dla programistów - tym bardziej Juniorów. O dziwo, była jedna oferta praktyk. Uradowany zaaplikowałem, jednak spóźniłem się, bo rekrutacja już się zakończyła. Zaproponowano mi, że jeśli czuję się na siłach to mogę zaaplikować na stanowisko Juniora. Dopiero zaczynałem z Javą, więc tego nie zrobiłem.&lt;/p&gt;

&lt;p&gt;Po opanowaniu podstaw Javy zabrałem się za tworzenie nowego projektu – &lt;a href=&quot;/moje-projekty#todo-list-app&quot;&gt;aplikacji&lt;/a&gt; do zarządzania “todo” listami. Coś w rodzaju Trello. Był to świetny projekt do nauki, mogłem wykorzystać większość technologii, które miałem w planach się nauczyć. I tak kolejno poznałem technologie: Servlet, JSP, JSTL, Spring, Hibernate, zarządzanie zależnościami w Maven i podstawy testowania z JUnit i Mockito. Projekt stawiałem z wykorzystaniem Tomcata.&lt;/p&gt;

&lt;p&gt;Podczas swojej nauki przeczytałem kilka książek i obejrzałem wiele tutoriali. Kindle miałem praktycznie zawsze przy sobie i jak tylko nadarzyła się okazja to się uczyłem.&lt;/p&gt;

&lt;h1 id=&quot;seria-porażek-i&quot;&gt;Seria porażek i…&lt;/h1&gt;

&lt;p&gt;W między czasie, na początku budowania aplikacji, odbywały się rekrutacje na studia. Po przeanalizowaniu +/- praca vs studia, chciałem mimo wszystko studiować, ale złożyłem aplikację na wcześniej wspomniane stanowisko tak z ciekawości, żeby zobaczyć, na czym stoję i mieć ewentualną alternatywę - jeśli udałoby się z pracą, a nie ze studiami.&lt;/p&gt;

&lt;p&gt;Pewnego dnia, miła Pani z HR zadzwoniła do mnie w odpowiedzi na aplikację. Myślałem, że rozmowę kwalifikacyjną odbędę w firmie, a przez telefon ustalimy tylko kiedy. Myliłem się :D. Pierwsza wstępna rozmowa jest przez telefon. Musiałem odpowiedzieć na szereg pytań technicznych i rozmawiać po angielsku. Stresowałem się niesamowicie, w ogóle nie spodziewałem się takiej rozmowy. Kilka pytań technicznych pomieszałem, a część anglojęzyczna poszła w miarę. Pani z HR powiedziała, że mojej wiedzy jest jeszcze trochę za mało, żeby przejść dalszy proces rekrutacji i zasugerowała spróbowanie jeszcze raz za jakiś czas, jak będę umiał więcej. Trochę mnie to przygasiło, ale niedługo potem dało kopa do dalszej pracy ;)&lt;/p&gt;

&lt;p&gt;Tak więc, moim celem było dostanie się na informatykę do Wrocławia na PWR - i tylko tam. Nie złożyłem aplikacji nigdzie indziej. Miałem ambicję na jakąś lepszą uczelnie, żeby nie iść na jakąś zapchaj dziurę i coś właściwie z niej wynieść. PWR vs AGH w Krakowie vs PW w Warszawie było optymalnym wyborem, jeśli chodzi o trudność dostania się. Również było to atrakcyjne miasto. Miałem nadzieję, ze mi się uda. Nie wiem czy to było dobre myślenie, bo niestety nie dostałem się z pierwszej rekrutacji.&lt;/p&gt;

&lt;p&gt;Po tej porażce, zacząłem na maksa poświęcać się na nauce Javy przy wspomnianej aplikacji. Skupiałem się na technologiach, które były wymagane w tej ofercie. Miałem jeszcze nadzieje na dostanie się na PWR z kolejnych rekrutacji, jednak mimo wytrwania do ostatniej - 5 (każdorazowo zdzierali ze mnie 80zł za rekrutacje), nie dostałem się. Progi dużo skoczyły w tym roku - a matura mimo włożonego trudu nie poszła najlepiej. Tak więc straciłem możliwość studiowania w tym roku.&lt;/p&gt;

&lt;p&gt;Później biłem się z myślami i mówiłem sobie, że mogłem iść gdzieś indziej, choćby PK w Krakowie. Rodzice mówili to samo, bo przecież jak to bez studiów. Może to i racja, bo studia aż tak programowania nie udoskonalają, a i tak bym sam się rozwijał na boku. Przynajmniej studia mniej wymagające zabierałyby mi mniej czasu, więc miałbym go więcej na samorozwój. No ale wybór pozostał jeden - szukanie pracy. Dobrze, że stale rozwijałem się i uczyłem bo pozostałbym z niczym. Musiałbym chyba skoczyć na budowlankę :D.&lt;/p&gt;

&lt;p&gt;Przygotowałem CV, rozpisałem swoje projekty, umiejętności i nic po za tym. Nie umieszczałem żadnych kwalifikacji zawodowych ani odbytych praktyk - miały mało związku z programowaniem i były dla mnie bezwartościowe.&lt;/p&gt;

&lt;p&gt;Z aktualnym stackiem technologicznym, który poznałem do tej pory - przynajmniej na poziomie podstawowym, spełniałem wymagania kilku ofert pracy dla Junior Programistów Javy. Jednak największym moim problemem był brak komercyjnego doświadczenia, a większość firm tego wymaga nawet dla Juniorów. Sporo ofert pracy w wymaganiach miało też ukończenie szkoły wyższej. Jest to dla mnie troszeczkę ironiczne, ale stawiam ze firmy mają jakieś plusy z tego, żę biorą studentów.&lt;/p&gt;

&lt;p&gt;Postanowiłem więc, że poszukam lokalnie oraz w Krakowie, bo nie mam aż tak daleko, a to miasto jest zdecydowanie atrakcyjniejsze jeśli chodzi o pracę. Przeglądając oferty pracy natrafiłem na ofertę, na którą wcześniej aplikowałem z niepowodzeniem. Pracowałem intensywnie przez ostatnie miesiące - nadrobiłem sporo zaległości i poznałem nowe technologie, więc uznałem, że spróbuję jeszcze raz. Zgodnie z zaleceniami :D. Byłem jednak sceptycznie do tego nastawiony. Niestety była to jedyna oferta dla Juniorów w Kielcach. Oprócz jednej - która miała nieco większe wymagania. Mimo wszystko złożyłem aplikację tu i tu. Poza tym znalazłem kilka ofert w Krakowie. Również na nie zaaplikowałem.&lt;/p&gt;

&lt;p&gt;Pierwszą odpowiedź dostałem po kilku dniach - mailowo. Była to anglojęzyczna firma z Krakowa. Zostałem poproszony o wykonanie testu programistycznego - napisanie &lt;a href=&quot;https://github.com/C0deboy/X-Formation-java-developer-test&quot;&gt;aplikacji&lt;/a&gt; konsolowej do zamawiania jedzenia. Wykonałem to, ale koniec końców dostałem odpowiedź, że napisany przeze mnie program nie spełnia ich oczekiwań. Poprosiłem o feedback, żeby wiedzieć, co było nie tak i ku mojemu zdziwieniu otrzymałem dobrze opisaną listę rzeczy (nawet z linkami do książek/konferencji), nad którymi mógłbym popracować i zachęcano mnie do aplikowania po jakimś czasie.&lt;/p&gt;

&lt;p&gt;Inne firmy się nie odzywały, pewnie ze względu na brak doświadczenia i że jestem zaraz po technikum, bez studiów. Wiele firm obawia się tego, że po krótkim czasie uciekniemy od nich (choćby na studia), po tym jak oni zainwestują w nasz rozwój. Nie wiedziałem, co ze sobą zrobić. Nie mogłem się na niczym skupić, cały czas myślałem o pracy.&lt;/p&gt;

&lt;p&gt;Dopiero po 2 tygodniach dostałem telefon od firmy, do której już wcześniej aplikowałem z niepowodzeniem. Tym razem poszło mi o wiele lepiej. Zostałem zaproszony na rozmowę. Firma bardzo mi się podobała wizualnie - był to nowy budynek. Również ludzie wydawali się całkiem mili. Tam czekała mnie jednogodzinna rozmowa techniczna, po części po angielsku oraz 3 godziny na napisanie jakieś przykładowej aplikacji konsolowej. W moim przypadku była to symulacja prostego “systemu bankowego”. Zakładanie kont użytkowników (w tym admina, który zarządzał kontami). Tworzenie i przypisywanie im kont bankowych. Zapisywanie i odczytywanie tych danych z xml i jakieś proste przelewy między kontami. To tak mniej więcej. Rozmowa poszła mi bardzo dobrze. Z aplikacją było już trochę gorzej. Robiłem ją trochę chaotycznie i na stresie. Na koniec jednak, gdy musiałem wychodzić, powiedziałem co zrobiłbym tu inaczej i było wzięte to pod uwagę.&lt;/p&gt;

&lt;p&gt;Po całym procesie miałem mieszane uczucia. Nie byłem pewny czy poszło mi wystarczająco dobrze. Na odpowiedź musiałem czekać prawie 2 tygodnie i zaczynałem dostawać świra. To była moja jedyna szansa na pracę w tym momencie. Firma wydawała mi się idealna, na dodatek na miejscu, więc do wypłaty mogłem sobie doliczyć bez problemu minimum jakieś 1200 zł - ze względów na brak kosztów utrzymania się w innym mieście.&lt;/p&gt;

&lt;p&gt;W końcu, pewnego dnia zadzwonił telefon. Byłem tak zestresowany, że ciężko mi było mówić. Powiedzieli mi, że rozmowa poszła mi dobrze, z językiem angielskim raczej nie będę miał problemu (firma ma klientów zagranicznych), jednak napisana przeze mnie aplikacja nie była idealna. Mimo wszystko, po chwili dowiedziałem się, że DOSTAŁEM PRACE! Ulga jaką poczułem była nie do opisania. Dostałem dobrą rekomendację od programisty, z którym miałem rozmowę kwalifikacyjną, wydawałem im się na ambitną osobą i uznali, że dadzą mi szansę. W dodatku, podobno jestem pierwszą tak młodą osobą przyjętą do pracy w historii firmy. To też fajne uczucie :D&lt;/p&gt;

&lt;p&gt;Pracę zaczynam od nowego roku. Umowę mam już podpisaną. Jestem zadowolony, że mi się udało. Mam nadzieję, że przyjemnie będzie mi się tam pracowało, nabiorę sporo doświadczenia i będę to miło wspominał.&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Nie uważam, że przyszło mi to jakoś łatwo. Poświęciłem na to dużo wolnego czasu i włożyłem w to sporo wysiłku. Pracę znalazłem stosunkowo szybko, nawet w mieście takim jak Kielce, gdzie rynek dla programistów jest ubogi. Więcej trwał proces czekania na odpowiedź niż szukałem pracy.&lt;/p&gt;

&lt;p&gt;Co do studiów, to żałuję i nie żałuję. Z jednej strony fajna sprawa, z drugiej cieszę się, że mogę sobie pracować nad własnymi rzeczami i wreszcie zacznę zarabiać w swoim zawodzie, a co najważniejsze – nabierać komercyjnego doświadczenia. Jak słyszę moich znajomych jak to mają na studiach to chyba nawet bardziej jestem za tą pracą :D Oczywiście jeszcze nie jest powiedziane, że kiedyś na nie nie trafię.&lt;/p&gt;

&lt;p&gt;Może ktoś przez ten wpis zda sobie sprawę, że już pora wyjść z jaskini i zacząć się rozglądać za pierwszą pracą? Kto wie ;)&lt;/p&gt;

&lt;p&gt;Swoją drogą, planuję kiedyś zrobić wpis właśnie na temat praca vs studia ;) Powstał już post &lt;a href=&quot;https://devcave.pl/wybory-programisty/liceum-vs-technikum-co-wybrac&quot;&gt;technikum vs liceum&lt;/a&gt;, więc to będzie dobre uzupełnienie.&lt;/p&gt;</content><author><name>Codeboy</name></author><category term="Moje-doświadczenia" /><category term="Pierwsza-praca" /><category term="Moje-doświadczenia" /><summary type="html">Minęło sporo czasu od ostatniego postu. Przez ten okres całkowicie poświęciłem się nauce Javy i jej technologii, aby jak najszybciej mieć szansę na dostanie pracy. I udało się! Chciałem się tym tutaj podzielić i przedstawić całą drogę od początku do końca. Jak zaczynałem Programowania zacząłem się uczyć (tak bardziej na poważnie, z myślą bycia programistą) gdzieś na początku 4 klasy technikum informatycznego (2016 rok). Wcześniej nie byłem jeszcze pewien, co chciałbym robić w przyszłości. Jak pewnie w większości techników, programowanie opierało się na programowaniu webowym, czyli wokół HTML, CSS i Javascript. Były to jednak takie podstawy, że praktycznie nie było możliwe napisanie czegoś konkretnego z taką wiedzą. O OOP to nawet nie słyszałem. Dlatego zacząłem interesować się tym tematem i uczyć się na własną rękę. Wtedy trafiłem na kursy M. Zelenta, które były dla mnie po prostu idealne. Ponadto, dzięki nim dostałem tyle motywacji i tak mnie zachęciły do działania, że o niczym innym już nie myślałem i to właśnie z programowaniem chciałem wiązać przyszłość (trwa to do dziś). Jednak po jakimś czasie okazało się, że wiedza wyniesiona z technikum (przynajmniej w moim wypadku) oraz częściowo z kursów okazała się stertą złych praktyk, o czym szybko się przekonałem dzięki zakładaniu wątków na Forum Pasja Informatyki z moimi projektami - pisanymi w celu nauki technologii webowych. Dzięki wielu osobom z forum, m.in. Krzycho92, argeento oraz później Comandeer i Ivan, wiele się nauczyłem i po części feedback z forum motywował mnie do dalszej pracy. Moje projekty Zrobiłem listę moich projektów, żeby mieć się z czego pośmiać za parę lat, ale też z myślą, że ktoś zobaczy jak wygląda mniej więcej progres projektów i na jakim etapie można się starać o pierwszą pracę. I tak na początku pomijając jakieś śmieszne stronki na ocenę do szkoły, moim pierwszym projektem była gra kółko i krzyżyk zrobiona w HTML, CSS i Javascript. Miałem tu też pierwszą styczność z Gitem. Później w tych samych technologiach razem z kolegą zrobiliśmy kopię Game of Life Johna Conwaya (Ciężko to nazwać grą :D). Gdzieś w między czasie wygrałem konkurs świąteczny (100zł na książkę :D) zajmując 1 miejsce z 72 głosami (drugie miało 35), którego celem było wykonanie animacji znaków ASCII w dowolnej technologii zorganizowany przez Forum Pasja Informatyki. Animacja w HTML, CSS, Javascript wyglądała tak: Dało mi to sporo satysfakcji :D Po drodze, na potrzeby szkolne, wykonaliśmy z kolegą aplikację webową symulującą szkolne rysowanie obrazów w zwierciadłach i soczewkach. Następnym moim projektem, już nieco większym, który rozwijam do dziś, była strona jaki-jezyk-programowania.pl. Prace wystartowały w styczniu 2017 roku. To tu, podczas budowania strony, nauczyłem się najwięcej z technologii webowych. Poznałem Bootstrapa i jQuery. Zacząłem używać ES6 i buildować projekt z pomocą webpacka. O jakość kodu dbał mi ESLint. Nie mówiąc już ile pochłonąłem wiedzy teoretycznej na temat różnych technologii. Jest to projekt na który poświeciłem największą ilość czasu. Zacząłem pisać tego bloga dzięki inicjatywie DajSiePoznac2017 z wykorzystaniem narzędzia Jekyll - opisywałem to wcześniej na blogu. Był to nieco burzliwy okres, gdyż częstotliwość postów była 2 na tydzień, w między czasie rozwijałem jaki-jezyk-programowania.pl. Na dodatek byłem niedługo przed maturą i poświęcałem masę czasu na naukę do rozszerzeń - matematyki i informatyki, przez to bardzo mało czasu zostawało mi na programowanie. Dosłownie katowałem się tym, a koniec końców nie udało mi się uzyskać satysfakcjonującego wyniku z matury - o tym później. Co do blogowania to było to miłe doświadczenie i chyba do tego wracam ;) Jako odskocznia od typowych projektów zacząłem tworzyć remake retro gry Battle City/Tank 1990 w Phaserze. Pewnie każdy ją kojarzy z dzieciństwa. Gra nie jest dokończona, zatrzymałem się na podstawowych elementach mechaniki gry (bez leveli, różnych czołgów i zbierania ulepszeń) by zająć się w pełnym wymiarze tym czym zacząłem się uczyć w między czasie - Javą, jej technologiami i OOP. Tworzenie gry było ciekawym doświadczeniem, myślę, że kiedyś do niej wrócę lub zabiorę się za jakąś nową. Tak więc, moim kolejnym celem była Java. W tej technologii chciałem pracować i miał to być mój główny język programowania. Zbliżały się wakacje, więc pomyślałem, że może znajdę jakieś praktyki żeby nabrać trochę doświadczenia. Niestety, mieszkam w Kielcach, gdzie jest bardzo mało ofert pracy dla programistów - tym bardziej Juniorów. O dziwo, była jedna oferta praktyk. Uradowany zaaplikowałem, jednak spóźniłem się, bo rekrutacja już się zakończyła. Zaproponowano mi, że jeśli czuję się na siłach to mogę zaaplikować na stanowisko Juniora. Dopiero zaczynałem z Javą, więc tego nie zrobiłem. Po opanowaniu podstaw Javy zabrałem się za tworzenie nowego projektu – aplikacji do zarządzania “todo” listami. Coś w rodzaju Trello. Był to świetny projekt do nauki, mogłem wykorzystać większość technologii, które miałem w planach się nauczyć. I tak kolejno poznałem technologie: Servlet, JSP, JSTL, Spring, Hibernate, zarządzanie zależnościami w Maven i podstawy testowania z JUnit i Mockito. Projekt stawiałem z wykorzystaniem Tomcata. Podczas swojej nauki przeczytałem kilka książek i obejrzałem wiele tutoriali. Kindle miałem praktycznie zawsze przy sobie i jak tylko nadarzyła się okazja to się uczyłem. Seria porażek i… W między czasie, na początku budowania aplikacji, odbywały się rekrutacje na studia. Po przeanalizowaniu +/- praca vs studia, chciałem mimo wszystko studiować, ale złożyłem aplikację na wcześniej wspomniane stanowisko tak z ciekawości, żeby zobaczyć, na czym stoję i mieć ewentualną alternatywę - jeśli udałoby się z pracą, a nie ze studiami. Pewnego dnia, miła Pani z HR zadzwoniła do mnie w odpowiedzi na aplikację. Myślałem, że rozmowę kwalifikacyjną odbędę w firmie, a przez telefon ustalimy tylko kiedy. Myliłem się :D. Pierwsza wstępna rozmowa jest przez telefon. Musiałem odpowiedzieć na szereg pytań technicznych i rozmawiać po angielsku. Stresowałem się niesamowicie, w ogóle nie spodziewałem się takiej rozmowy. Kilka pytań technicznych pomieszałem, a część anglojęzyczna poszła w miarę. Pani z HR powiedziała, że mojej wiedzy jest jeszcze trochę za mało, żeby przejść dalszy proces rekrutacji i zasugerowała spróbowanie jeszcze raz za jakiś czas, jak będę umiał więcej. Trochę mnie to przygasiło, ale niedługo potem dało kopa do dalszej pracy ;) Tak więc, moim celem było dostanie się na informatykę do Wrocławia na PWR - i tylko tam. Nie złożyłem aplikacji nigdzie indziej. Miałem ambicję na jakąś lepszą uczelnie, żeby nie iść na jakąś zapchaj dziurę i coś właściwie z niej wynieść. PWR vs AGH w Krakowie vs PW w Warszawie było optymalnym wyborem, jeśli chodzi o trudność dostania się. Również było to atrakcyjne miasto. Miałem nadzieję, ze mi się uda. Nie wiem czy to było dobre myślenie, bo niestety nie dostałem się z pierwszej rekrutacji. Po tej porażce, zacząłem na maksa poświęcać się na nauce Javy przy wspomnianej aplikacji. Skupiałem się na technologiach, które były wymagane w tej ofercie. Miałem jeszcze nadzieje na dostanie się na PWR z kolejnych rekrutacji, jednak mimo wytrwania do ostatniej - 5 (każdorazowo zdzierali ze mnie 80zł za rekrutacje), nie dostałem się. Progi dużo skoczyły w tym roku - a matura mimo włożonego trudu nie poszła najlepiej. Tak więc straciłem możliwość studiowania w tym roku. Później biłem się z myślami i mówiłem sobie, że mogłem iść gdzieś indziej, choćby PK w Krakowie. Rodzice mówili to samo, bo przecież jak to bez studiów. Może to i racja, bo studia aż tak programowania nie udoskonalają, a i tak bym sam się rozwijał na boku. Przynajmniej studia mniej wymagające zabierałyby mi mniej czasu, więc miałbym go więcej na samorozwój. No ale wybór pozostał jeden - szukanie pracy. Dobrze, że stale rozwijałem się i uczyłem bo pozostałbym z niczym. Musiałbym chyba skoczyć na budowlankę :D. Przygotowałem CV, rozpisałem swoje projekty, umiejętności i nic po za tym. Nie umieszczałem żadnych kwalifikacji zawodowych ani odbytych praktyk - miały mało związku z programowaniem i były dla mnie bezwartościowe. Z aktualnym stackiem technologicznym, który poznałem do tej pory - przynajmniej na poziomie podstawowym, spełniałem wymagania kilku ofert pracy dla Junior Programistów Javy. Jednak największym moim problemem był brak komercyjnego doświadczenia, a większość firm tego wymaga nawet dla Juniorów. Sporo ofert pracy w wymaganiach miało też ukończenie szkoły wyższej. Jest to dla mnie troszeczkę ironiczne, ale stawiam ze firmy mają jakieś plusy z tego, żę biorą studentów. Postanowiłem więc, że poszukam lokalnie oraz w Krakowie, bo nie mam aż tak daleko, a to miasto jest zdecydowanie atrakcyjniejsze jeśli chodzi o pracę. Przeglądając oferty pracy natrafiłem na ofertę, na którą wcześniej aplikowałem z niepowodzeniem. Pracowałem intensywnie przez ostatnie miesiące - nadrobiłem sporo zaległości i poznałem nowe technologie, więc uznałem, że spróbuję jeszcze raz. Zgodnie z zaleceniami :D. Byłem jednak sceptycznie do tego nastawiony. Niestety była to jedyna oferta dla Juniorów w Kielcach. Oprócz jednej - która miała nieco większe wymagania. Mimo wszystko złożyłem aplikację tu i tu. Poza tym znalazłem kilka ofert w Krakowie. Również na nie zaaplikowałem. Pierwszą odpowiedź dostałem po kilku dniach - mailowo. Była to anglojęzyczna firma z Krakowa. Zostałem poproszony o wykonanie testu programistycznego - napisanie aplikacji konsolowej do zamawiania jedzenia. Wykonałem to, ale koniec końców dostałem odpowiedź, że napisany przeze mnie program nie spełnia ich oczekiwań. Poprosiłem o feedback, żeby wiedzieć, co było nie tak i ku mojemu zdziwieniu otrzymałem dobrze opisaną listę rzeczy (nawet z linkami do książek/konferencji), nad którymi mógłbym popracować i zachęcano mnie do aplikowania po jakimś czasie. Inne firmy się nie odzywały, pewnie ze względu na brak doświadczenia i że jestem zaraz po technikum, bez studiów. Wiele firm obawia się tego, że po krótkim czasie uciekniemy od nich (choćby na studia), po tym jak oni zainwestują w nasz rozwój. Nie wiedziałem, co ze sobą zrobić. Nie mogłem się na niczym skupić, cały czas myślałem o pracy. Dopiero po 2 tygodniach dostałem telefon od firmy, do której już wcześniej aplikowałem z niepowodzeniem. Tym razem poszło mi o wiele lepiej. Zostałem zaproszony na rozmowę. Firma bardzo mi się podobała wizualnie - był to nowy budynek. Również ludzie wydawali się całkiem mili. Tam czekała mnie jednogodzinna rozmowa techniczna, po części po angielsku oraz 3 godziny na napisanie jakieś przykładowej aplikacji konsolowej. W moim przypadku była to symulacja prostego “systemu bankowego”. Zakładanie kont użytkowników (w tym admina, który zarządzał kontami). Tworzenie i przypisywanie im kont bankowych. Zapisywanie i odczytywanie tych danych z xml i jakieś proste przelewy między kontami. To tak mniej więcej. Rozmowa poszła mi bardzo dobrze. Z aplikacją było już trochę gorzej. Robiłem ją trochę chaotycznie i na stresie. Na koniec jednak, gdy musiałem wychodzić, powiedziałem co zrobiłbym tu inaczej i było wzięte to pod uwagę. Po całym procesie miałem mieszane uczucia. Nie byłem pewny czy poszło mi wystarczająco dobrze. Na odpowiedź musiałem czekać prawie 2 tygodnie i zaczynałem dostawać świra. To była moja jedyna szansa na pracę w tym momencie. Firma wydawała mi się idealna, na dodatek na miejscu, więc do wypłaty mogłem sobie doliczyć bez problemu minimum jakieś 1200 zł - ze względów na brak kosztów utrzymania się w innym mieście. W końcu, pewnego dnia zadzwonił telefon. Byłem tak zestresowany, że ciężko mi było mówić. Powiedzieli mi, że rozmowa poszła mi dobrze, z językiem angielskim raczej nie będę miał problemu (firma ma klientów zagranicznych), jednak napisana przeze mnie aplikacja nie była idealna. Mimo wszystko, po chwili dowiedziałem się, że DOSTAŁEM PRACE! Ulga jaką poczułem była nie do opisania. Dostałem dobrą rekomendację od programisty, z którym miałem rozmowę kwalifikacyjną, wydawałem im się na ambitną osobą i uznali, że dadzą mi szansę. W dodatku, podobno jestem pierwszą tak młodą osobą przyjętą do pracy w historii firmy. To też fajne uczucie :D Pracę zaczynam od nowego roku. Umowę mam już podpisaną. Jestem zadowolony, że mi się udało. Mam nadzieję, że przyjemnie będzie mi się tam pracowało, nabiorę sporo doświadczenia i będę to miło wspominał. Podsumowanie Nie uważam, że przyszło mi to jakoś łatwo. Poświęciłem na to dużo wolnego czasu i włożyłem w to sporo wysiłku. Pracę znalazłem stosunkowo szybko, nawet w mieście takim jak Kielce, gdzie rynek dla programistów jest ubogi. Więcej trwał proces czekania na odpowiedź niż szukałem pracy. Co do studiów, to żałuję i nie żałuję. Z jednej strony fajna sprawa, z drugiej cieszę się, że mogę sobie pracować nad własnymi rzeczami i wreszcie zacznę zarabiać w swoim zawodzie, a co najważniejsze – nabierać komercyjnego doświadczenia. Jak słyszę moich znajomych jak to mają na studiach to chyba nawet bardziej jestem za tą pracą :D Oczywiście jeszcze nie jest powiedziane, że kiedyś na nie nie trafię. Może ktoś przez ten wpis zda sobie sprawę, że już pora wyjść z jaskini i zacząć się rozglądać za pierwszą pracą? Kto wie ;) Swoją drogą, planuję kiedyś zrobić wpis właśnie na temat praca vs studia ;) Powstał już post technikum vs liceum, więc to będzie dobre uzupełnienie.</summary></entry><entry><title type="html">Podsumowanie DSP2017</title><link href="https://devcave.pl/dajsiepoznac2017/podsumowanie-dsp2017" rel="alternate" type="text/html" title="Podsumowanie DSP2017" /><published>2017-05-30T02:12:00+02:00</published><updated>2017-05-30T02:12:00+02:00</updated><id>https://devcave.pl/dajsiepoznac2017/podsumowanie-dsp2017</id><content type="html" xml:base="https://devcave.pl/dajsiepoznac2017/podsumowanie-dsp2017">&lt;p&gt;Cieszę się, że dotrwałem do samego końca. Konkurs DSP2017 był dla mnie miłym doświadczeniem, dzięki niemu dowiedziałem się jak to jest blogować i śmiało mogę powiedziecie, że nie jest to łatwa sprawa, tym bardziej, jeśli mówimy o regularnym blogowaniu. Wymaga to wiele naszego wkładu, wysiłku i czasu. W moim przypadku było jeszcze gorzej, bo akurat w okresie trwania konkursu tego ostatniego miałem najmniej, co było dodatkowym utrudnieniem. Ciekawy jestem ile z tych prawie 1000 osób dotrwało do końca.&lt;/p&gt;

&lt;p&gt;Blogowanie samo w sobie nawet mi się podobało, ale fakt, że moja wiedza o programowaniu jest niewielka i nie mam zbyt wiele ciekawych doświadczeń w programistycznym życiu, z których mogłoby powstawać wpisy, powodowało, że pisałem trochę na siłę. Blogowanie o tworzeniu samego projektu nie wydaje mi się ciekawym tematem.&lt;/p&gt;

&lt;p&gt;Jednak pomaga to ułożyć w naszej głowie zdobywaną wiedzę, lepiej zrozumieć dany temat oraz łatwiej go zapamiętać. Ponadto jest to też magazyn naszej wiedzy, można łatwo do tego wrócić, co jest dodatkowym plusem. Ba, samo pisanie jest nauką. Więc na pewno na tym nic nie straciłem, wszystko na plus!&lt;/p&gt;

&lt;p&gt;Nie wiem czy będę dalej prowadził tego bloga, w chwili obecnej zapowiadają się dosyć pracowite wakacje. Może wrócę do tego, gdy nabiorę więcej doświadczenia, którym będę mógł się dzielić w postaci wpisów. Zobaczymy.&lt;/p&gt;

&lt;h3 id=&quot;podsumowując&quot;&gt;Podsumowując&lt;/h3&gt;

&lt;p&gt;Cieszę się, że zdecydowałem się wziąć udział w konkursie i że dotrwałem do końca. Była to fajna inicjatywa, która pokazała mi nieco świat blogowania. Nie zmieniło to jednak nic, jeśli chodzi o pokazywanie się w Internecie. Nie “dałem się poznać”, odzew był praktycznie zerowy, więc ta idea jest nieco koloryzowana. Pewnie wielu z Was ma takie odczucie. Jest to ciężkie zadanie. Podobnie ma się sprawa z proszeniem o pomoc przy projekcie, szukanie chętnych do współpracy czy zwykły code review. Jeśli któreś z wyżej wymienionych uda nam się osiągnąć, to powinniśmy być naprawdę wdzięczni, bo wydaję mi się, że nie jest to takie proste, na jakie się wydaje.&lt;/p&gt;</content><author><name>Codeboy</name></author><category term="DajSiePoznac2017" /><category term="DajSiePoznac2017" /><summary type="html">Cieszę się, że dotrwałem do samego końca. Konkurs DSP2017 był dla mnie miłym doświadczeniem, dzięki niemu dowiedziałem się jak to jest blogować i śmiało mogę powiedziecie, że nie jest to łatwa sprawa, tym bardziej, jeśli mówimy o regularnym blogowaniu. Wymaga to wiele naszego wkładu, wysiłku i czasu. W moim przypadku było jeszcze gorzej, bo akurat w okresie trwania konkursu tego ostatniego miałem najmniej, co było dodatkowym utrudnieniem. Ciekawy jestem ile z tych prawie 1000 osób dotrwało do końca. Blogowanie samo w sobie nawet mi się podobało, ale fakt, że moja wiedza o programowaniu jest niewielka i nie mam zbyt wiele ciekawych doświadczeń w programistycznym życiu, z których mogłoby powstawać wpisy, powodowało, że pisałem trochę na siłę. Blogowanie o tworzeniu samego projektu nie wydaje mi się ciekawym tematem. Jednak pomaga to ułożyć w naszej głowie zdobywaną wiedzę, lepiej zrozumieć dany temat oraz łatwiej go zapamiętać. Ponadto jest to też magazyn naszej wiedzy, można łatwo do tego wrócić, co jest dodatkowym plusem. Ba, samo pisanie jest nauką. Więc na pewno na tym nic nie straciłem, wszystko na plus! Nie wiem czy będę dalej prowadził tego bloga, w chwili obecnej zapowiadają się dosyć pracowite wakacje. Może wrócę do tego, gdy nabiorę więcej doświadczenia, którym będę mógł się dzielić w postaci wpisów. Zobaczymy. Podsumowując Cieszę się, że zdecydowałem się wziąć udział w konkursie i że dotrwałem do końca. Była to fajna inicjatywa, która pokazała mi nieco świat blogowania. Nie zmieniło to jednak nic, jeśli chodzi o pokazywanie się w Internecie. Nie “dałem się poznać”, odzew był praktycznie zerowy, więc ta idea jest nieco koloryzowana. Pewnie wielu z Was ma takie odczucie. Jest to ciężkie zadanie. Podobnie ma się sprawa z proszeniem o pomoc przy projekcie, szukanie chętnych do współpracy czy zwykły code review. Jeśli któreś z wyżej wymienionych uda nam się osiągnąć, to powinniśmy być naprawdę wdzięczni, bo wydaję mi się, że nie jest to takie proste, na jakie się wydaje.</summary></entry><entry><title type="html">Git - usuwanie pliku z repozytorium</title><link href="https://devcave.pl/dajsiepoznac2017/git-usuwanie-pliku-z-repozytorium" rel="alternate" type="text/html" title="Git - usuwanie pliku z repozytorium" /><published>2017-05-24T02:12:00+02:00</published><updated>2017-05-24T02:12:00+02:00</updated><id>https://devcave.pl/dajsiepoznac2017/git-usuwanie-pliku-z-repozytorium</id><content type="html" xml:base="https://devcave.pl/dajsiepoznac2017/git-usuwanie-pliku-z-repozytorium">&lt;p&gt;Komu nie zdarzyło się chociaż raz przez pomyłkę / nieuwagę / niewiedzę wrzucić wrażliwy plik do repozytorium? Jeśli tobie, to zazdroszczę. Jednak nie wszystko stracone! Można się go pozbyć.&lt;/p&gt;

&lt;h1&gt;BFG Repo-Cleaner&lt;/h1&gt;
&lt;p&gt;Z pomocą przychodzi &lt;a href=&quot;https://rtyley.github.io/bfg-repo-cleaner/&quot;&gt;BFG&lt;/a&gt;! Pobieramy go z oficjalnej strony i kilkoma poleceniami pozbędziemy się niechcianego pliku z repozytorium Git-a:&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Zakładam, że pobrany plik jest na pulpicie.&lt;/u&gt;
Otwieramy konsolę i przechodzimy na pulpit:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Desktop&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Następnie musimy sklonować nasze repozytorium:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone &lt;span class=&quot;nt&quot;&gt;--mirror&lt;/span&gt; https://github.com/Nazwa-użytkownika/nazwa-repozytorium&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p class=&quot;note&quot;&gt;
Jeśli używasz GitHub Desktop - dodaj ścieżkę do cmd git-a do zmiennej systemowej Path, aby móc korzystać z gita także w terminalu. Powinna wyglądać mniej więcej tak: &lt;span class=&quot;path&quot;&gt;C:\Users\Nazwa-użytkownika\AppData\Local\GitHub\PortableGit_(id)\cmd&lt;/span&gt;. Zmienne systemowe znajdziesz w &lt;span class=&quot;path&quot;&gt;Panel sterowania -&amp;gt; System i zabezpieczenia -&amp;gt; System -&amp;gt; Zaawansowane ustawienia systemu -&amp;gt; Zmienne środowiskowe -&amp;gt; Zmienne Systemowe&lt;/span&gt;. &lt;u&gt;Pamiętaj o średniku przed wklejeniem ścieżki&lt;/u&gt;.
&lt;/p&gt;

&lt;p&gt;Jak pewnie zauważyłeś, jest to plik jar, więc do jego uruchomienia będzie potrzebna nam Java.&lt;/p&gt;

&lt;p class=&quot;note&quot;&gt;
Jeśli nie masz &lt;a href=&quot;https://www.java.com/pl/download/&quot;&gt;Javy&lt;/a&gt;, zaopatrz się w nią! Jeśli nie chcesz za każdym razem podawać pełnej ścieżki (domyślnie: &lt;span class=&quot;path&quot;&gt;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.7.0\bin&lt;/span&gt;) do plików wykonywalnych Javy, dodaj ją również do [Path](https://www.java.com/pl/download/help/path.xml).
&lt;/p&gt;

&lt;p&gt;Uruchamiamy go z flagą –delete-files oraz nazwą pliku(&lt;u&gt;nie ścieżka&lt;/u&gt;)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; bfg-wersja.jar &lt;span class=&quot;nt&quot;&gt;--delete-files&lt;/span&gt; nazwa-pliku.x&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Następnie przechodzimy do sklonowanego repozytorium&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;nazwa-repozytorium.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I uruchamiamy komendę:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git reflog expire &lt;span class=&quot;nt&quot;&gt;--expire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;now &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git gc &lt;span class=&quot;nt&quot;&gt;--prune&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;now &lt;span class=&quot;nt&quot;&gt;--aggressive&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Gdy nie było po drodze żadnych błędów i jesteśmy zadowoleni z wyniku, możemy pushować ;)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git push&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Codeboy</name></author><category term="DajSiePoznac2017" /><category term="DajSiePoznac2017" /><category term="Git" /><summary type="html">Komu nie zdarzyło się chociaż raz przez pomyłkę / nieuwagę / niewiedzę wrzucić wrażliwy plik do repozytorium? Jeśli tobie, to zazdroszczę. Jednak nie wszystko stracone! Można się go pozbyć. BFG Repo-Cleaner Z pomocą przychodzi BFG! Pobieramy go z oficjalnej strony i kilkoma poleceniami pozbędziemy się niechcianego pliku z repozytorium Git-a: Zakładam, że pobrany plik jest na pulpicie. Otwieramy konsolę i przechodzimy na pulpit: cd Desktop Następnie musimy sklonować nasze repozytorium: git clone --mirror https://github.com/Nazwa-użytkownika/nazwa-repozytorium Jeśli używasz GitHub Desktop - dodaj ścieżkę do cmd git-a do zmiennej systemowej Path, aby móc korzystać z gita także w terminalu. Powinna wyglądać mniej więcej tak: C:\Users\Nazwa-użytkownika\AppData\Local\GitHub\PortableGit_(id)\cmd. Zmienne systemowe znajdziesz w Panel sterowania -&amp;gt; System i zabezpieczenia -&amp;gt; System -&amp;gt; Zaawansowane ustawienia systemu -&amp;gt; Zmienne środowiskowe -&amp;gt; Zmienne Systemowe. Pamiętaj o średniku przed wklejeniem ścieżki. Jak pewnie zauważyłeś, jest to plik jar, więc do jego uruchomienia będzie potrzebna nam Java. Jeśli nie masz Javy, zaopatrz się w nią! Jeśli nie chcesz za każdym razem podawać pełnej ścieżki (domyślnie: C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.7.0\bin) do plików wykonywalnych Javy, dodaj ją również do [Path](https://www.java.com/pl/download/help/path.xml). Uruchamiamy go z flagą –delete-files oraz nazwą pliku(nie ścieżka) java -jar bfg-wersja.jar --delete-files nazwa-pliku.x Następnie przechodzimy do sklonowanego repozytorium cd nazwa-repozytorium.git I uruchamiamy komendę: git reflog expire --expire=now --all &amp;amp;&amp;amp; git gc --prune=now --aggressive Gdy nie było po drodze żadnych błędów i jesteśmy zadowoleni z wyniku, możemy pushować ;) git push</summary></entry></feed>