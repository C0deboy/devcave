/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/search/search.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/search/search.js":
/*!*****************************!*\
  !*** ./js/search/search.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {


class JekyllSearch {
  constructor(dataSource, searchField, resultsList) {
    this.dataSource = dataSource;
    this.searchField = document.querySelector(searchField);
    this.resultsList = document.querySelector(resultsList);

    this.displayResults = this.displayResults.bind(this);
  }

  fetchedData() {
    return fetch(this.dataSource)
      .then(blob => blob.json());
  }

  async findResults() {
    this.resultsList.innerHTML = '<i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i>';
    const inputValue = this.searchField.value.trim();
    const allWordsRegex = new RegExp('.*(' + inputValue.replace(/\s/g, ').*(') + ').*', 'i');
    const anyWordRegex = new RegExp('(^|\\s)' + inputValue.replace(/\s\w{1,2}\s/g, ' ')
      .replace(/\s/g, ' | ') + '(\\s|$)', 'i');

    const data = await this.fetchedData();

    const results = data.filter((item) => {
      const searchIn = escapePolishLetters(item.title + ' ' + item.subtitle);
      return searchIn.match(allWordsRegex);
    });

    if (results.length > 0) {
      return results;
    } else {
      return data.filter((item) => {
        const searchIn = escapePolishLetters(item.title + ' ' + item.subtitle);
        if (searchIn.match(anyWordRegex)) {
          console.log(searchIn);
          return true;
        }
        return searchIn.match(anyWordRegex);
      });
    }
  }

  async displayResults() {
    const results = await this.findResults();
    const html = results.map(item =>
      `<li class="result">
            <div class="post-preview">
              <a href="${item.url}">
                <h2 class="post-title">${item.title}</h2>
                <h3 class="post-subtitle">${item.subtitle}</h3>
              </a>
      
              <p class="post-meta">${item.date}</p>
            </div>
        </li>`)
      .join('');
    if ((results.length === 0) || (this.searchField.value === '')) {
      this.resultsList.innerHTML = '<p>Nic nie znaleziono</p>';
    } else {
      this.resultsList.innerHTML = html;
    }
  }

  init() {
    this.searchField.addEventListener('keyup', this.displayResults);
    this.searchField.addEventListener('keypress', (event) => {
      if (event.keyCode === 13) {
        event.preventDefault();
      }
    });
  }

  getUrlSearchQuery() {
    let searchQuery = getQueryVariable('szukaj');

    if (getQueryVariable('nowadomena') !== undefined) {
      const newDomainMessage = document.createElement('p');
      newDomainMessage.innerText = 'Blog został przeniesiony na nową domenę. Czy szukałeś tego?:';
      newDomainMessage.classList.add('not-found-msg');
      this.resultsList.parentElement.insertBefore(newDomainMessage, this.resultsList);

      searchQuery = searchQuery.replace(/\d/g, '')
        .substr(searchQuery.lastIndexOf('/') + 1);
    }

    if (searchQuery !== undefined) {
      this.searchField.value = searchQuery.replace(/[/\-_]/g, ' ');
      this.displayResults();
    } else if (window.location.pathname !== '/archiwum/') {
      const href = window.location.href;
      const xhr = new XMLHttpRequest();
      xhr.open('GET', href, true);
      xhr.onload = (e) => {
        if (xhr.status === 404) {
          const link = href.endsWith('/') ? href.substring(0, href.length - 1) : href;
          const searchedPost = link.substr(link.lastIndexOf('/') + 1);
          this.searchField.value = searchedPost.replace(/-/g, ' ');
          this.displayResults();
        }
      };
      xhr.send();
    }
  }
}

function getQueryVariable(variable) {
  const query = window.location.search.substring(1);
  const vars = query.split('&');

  for (let i = 0; i < vars.length; i++) {
    const pair = vars[i].split('=');

    if (pair[0] === variable) {
      return decodeURIComponent(pair[1].replace(/\+/g, '%20'));
    }
  }
}

function escapePolishLetters(word) {
  const polishChars = 'ąćęłńóśźż';
  const normalizedChars = 'acelnoszz';
  const charsRegExmp = new RegExp('[' + polishChars + ']', 'g');
  const transl = {};

  const lookup = (m) => {
    return transl[m] || m;
  };

  for (let i = 0; i < polishChars.length; i++) {
    transl[polishChars[i]] = normalizedChars[i];
  }

  return word.replace(charsRegExmp, lookup);
}

const search = new JekyllSearch(
  '/dist/js/search/search.json',
  '.search-value',
  '.search-results',
);

search.init();

search.getUrlSearchQuery();


/***/ })

/******/ });
//# sourceMappingURL=search.min.js.map